{"version":3,"sources":["components/layout/Search.js","constans/userConstans.js","actions/userActions.js","components/layout/header.js","components/layout/footer.js","components/layout/Metadata.js","constans/productsConstans.js","actions/productActions.js","components/product/product.js","components/layout/Loader.js","components/Home.js","constans/cartConstans.js","actions/cartActions.js","components/reviews/ListReviews.js","components/product/ProductDetails.js","components/user/Login.js","components/user/Register.js","constans/orderContstans.js","store.js","reducers/productsReducers.js","reducers/userReducer.js","reducers/cartReducers.js","reducers/orderReducers.js","components/user/Profile.js","components/route/ProtectedRoute.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shiping.js","components/cart/ConfirmOrders.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOfOrders.js","components/order/OrderDetails.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ListProducts.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/order/UpdateOrders.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/DisplayReviews.js","App.js","index.js"],"names":["Search","history","useHistory","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","type","id","placeholder","onChange","target","value","aria-hidden","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","CLEAR_ERROR","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","DETAILS_USERS_REQUEST","DETAILS_USERS_SUCCESS","DETAILS_USERS_FAIL","UPDATE_USERS_REQUEST","UPDATE_USERS_SUCCESS","UPDATE_USERS_FAIL","UPDATE_USERS_RESET","DELETE_USERS_REQUEST","DELETE_USERS_SUCCESS","DELETE_USERS_FAIL","DELETE_USERS_RESET","LOGOUT_SUCCESS","LOGOUT_FAIL","loadUser","dispatch","a","axios","get","data","payload","user","response","message","allUser","users","clearError","Header","useDispatch","alert","useAlert","useSelector","state","auth","loading","cartItems","error","cart","to","src","render","style","textDecoration","length","data-toggle","aria-haspopup","aria-expanded","avatar","url","alt","name","aria-labelledby","role","onClick","success","footer","class","Metadata","title","Helmet","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_DETAIL_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","getAdminProducts","products","getProductDetails","link","product","allReviews","reviews","Product","col","images","_id","width","ratings","numOfReviews","price","Loader","Range","createSliderWithTooltip","Slider","Home","match","productCounts","resPerPage","filteredProductsCount","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","params","useEffect","getProducts","setTimeout","count","marks","1","1000","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ADD_TO_CART","REMOVE_ITEM_TO_CART","SAVE_SHIPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ListReviews","review","comment","ProductDetails","setQuantity","setRatings","setComment","NewReview","reviewError","console","log","Carousel","pause","Item","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","data-target","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","data-dismiss","aria-label","dataReview","formData","FormData","set","config","headers","put","Login","location","isAuthUser","email","setEmail","password","setPassword","redirect","search","split","post","login","htmlFor","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","result","readAsDataURL","files","userData","encType","for","accept","NEW_ORDER_REQUEST","NEW_ORDER_SUCCESS","NEW_ORDER_FAIL","SHOW_ORDER_REQUEST","SHOW_ORDER_SUCCESS","SHOW_ORDER_FAIL","ALL_ORDER_REQUEST","ALL_ORDER_SUCCESS","ALL_ORDER_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","UPDATE_ORDER_RESET","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","DELETE_ORDER_RESET","ORDER_DETAIL_REQUEST","ORDER_DETAIL_SUCCESS","ORDER_DETAIL_FAIL","reducer","combineReducers","action","newProduct","deleteProduct","isDeleted","isUpdated","idUpdated","userDetail","forgotPassword","shipingInfo","item","isItemExist","find","i","filter","newOrder","order","allOrders","orders","totalAmount","showOrders","orderDetails","updateOrders","AllReviews","reviewsReducer","initialState","getItem","parse","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Profile","String","createAt","substring","ProtectedRoute","isAdmin","Component","component","rest","props","UpdateProfile","setName","UpdatePassword","oldPassword","setOldPassword","passwords","ForgotPassword","forgotPasswordA","NewPassword","confirmPassword","setConfirmPassword","token","Cart","removeCartItemHandler","removeItemToCart","classNameName","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shiping","confirmOrder","payment","Shiping","address","setAddress","city","setCity","postalCode","setPostalCode","PhoneNo","setPhoneNo","country","setCountry","countryList","Object","values","countries","required","ConfirmOrders","itemsPrice","shipingPrice","taxPrice","totalPrice","sessionStorage","createOrder","ErrMessage","orderDetailAction","getAllOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","orderItems","orderInfo","paymentData","amount","Math","round","sumbitHandler","res","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","paymentIntent","status","paymentInfo","OrderSuccess","ListOfOrders","disptach","columns","label","field","sort","rows","numOfItems","orderStatus","includes","actions","setOrders","bordered","striped","hover","OrderDetails","shipingDetail","isPaid","Sidebar","href","Dashboard","outOfStouk","ListProducts","deleteError","deleteHandler","delete","reposnse","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","productData","append","categoryy","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","UpdateOrders","setStatus","orderId","updateOrderHandler","orderData","updateOrder","shipingDetails","UsersList","deleteUserHandler","deleteUsers","setUsers","UpdateUser","setRole","userId","DisplayReviews","setProductId","deleteReviewHandler","deleteReviews","setReview","App","stripeApiKey","setStripeApyKey","getStipeApyKey","exact","path","loadStripe","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate"],"mappings":"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","file":"static/js/main.3b800610.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Search=()=> {\r\n\r\n    const history = useHistory()\r\n\r\nconst [keyword,setKeyword]= useState('');\r\n\r\n const searchHandler=(e)=>{\r\n\r\n        e.preventDefault()\r\n\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n\r\n        }else{\r\n            history.push(`/`)\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={searchHandler}>\r\n              <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"search_field\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Product Name ...\"\r\n            onChange={(e)=>setKeyword(e.target.value)}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button id=\"search_btn\" className=\"btn\">\r\n              <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","export const LOGIN_REQUEST =\"LOGIN_REQUEST\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\n//Register\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCES'\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\"\r\n//Load user\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n//Update user\r\nexport const UPDATE_USER_REQUEST= 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS= 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\r\n//Update password\r\nexport const UPDATE_PASSWORD_REQUEST=\"UPDATE_PASSWORD_REQUEST\"\r\nexport const UPDATE_PASSWORD_SUCCESS=\"UPDATE_PASSWORD_SUCCESS\"\r\nexport const UPDATE_PASSWORD_RESET = \"UPDATE_PASSWORD_RESET\"\r\nexport const UPDATE_PASSWORD_FAIL=\"UPDATE_PASSWORD_FAIL\"\r\n\r\n//Forgot password\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCES'\r\nexport const FORGOT_PASSWORD_FAIL ='FORGOT_PASSWORD_FAIL'\r\n\r\n//Reset password\r\nexport const NEW_PASSWORD_REQUEST= 'NEW_PASSWORD_REQUEST'\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\r\n\r\n//All users (ADMIN)\r\n\r\nexport const ALL_USERS_REQUEST= 'ALL_USERS_REQUEST'\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\r\n\r\n//User details (ADMIN)\r\nexport const DETAILS_USERS_REQUEST= 'DETAILS_USERS_REQUEST'\r\nexport const DETAILS_USERS_SUCCESS = 'DETAILS_USERS_SUCCESS'\r\nexport const DETAILS_USERS_FAIL = 'DETAILS_USERS_FAIL'\r\n\r\n//Update User (ADMIN)\r\n\r\nexport const UPDATE_USERS_REQUEST= 'UPDATE_USERS_REQUEST'\r\nexport const UPDATE_USERS_SUCCESS = 'UPDATE_USERS_SUCCESS'\r\nexport const UPDATE_USERS_FAIL = 'UPDATE_USERS_FAIL'\r\nexport const UPDATE_USERS_RESET = 'UPDATE_USERS_RESET'\r\n\r\n//DELETE USERS (admin)\r\nexport const DELETE_USERS_REQUEST= 'DELETE_USERS_REQUEST'\r\nexport const DELETE_USERS_SUCCESS = 'DELETE_USERS_SUCCESS'\r\nexport const DELETE_USERS_FAIL = 'DELETE_USERS_FAIL'\r\nexport const DELETE_USERS_RESET = 'DELETE_USERS_RESET'\r\n\r\n\r\n//Logout user\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n","import axios from 'axios'\r\n\r\n\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERROR,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    DETAILS_USERS_REQUEST,\r\n    DETAILS_USERS_SUCCESS,\r\n    DETAILS_USERS_FAIL,\r\n    UPDATE_USERS_REQUEST,\r\n    UPDATE_USERS_SUCCESS,\r\n    UPDATE_USERS_FAIL,\r\n    DELETE_USERS_REQUEST,\r\n    DELETE_USERS_SUCCESS,\r\n    DELETE_USERS_FAIL\r\n} from '../constans/userConstans'\r\n\r\n\r\n//Login\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: LOGIN_REQUEST })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//Load user\r\n\r\nexport const loadUser = ()=> async(dispatch)=>{\r\n\r\n    try {\r\n        dispatch({type:LOAD_USER_REQUEST})\r\n\r\n        \r\n\r\n        const {data}= await axios.get('/api/v1/me')\r\n\r\n        dispatch({type:LOAD_USER_SUCCESS,\r\n                payload:data.user\r\n            })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({type:LOAD_USER_FAIL,\r\n                    payload:error.response.data.message})\r\n        \r\n    }\r\n}\r\n\r\n//Logout user\r\n\r\nexport const logoutUser = ()=>async(dispatch)=>{\r\n\r\n    try {\r\n\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({type:LOGOUT_SUCCESS})\r\n\r\n       \r\n        \r\n    } catch (error) {\r\n        dispatch({type:LOGOUT_FAIL,\r\n                payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//Update user\r\n\r\nexport const updateUser =(userData)=>async(dispatch)=>{\r\n\r\n    try {\r\n        dispatch({type:UPDATE_USER_REQUEST})\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n    const link = '/api/v1/me/update'\r\n    const {data} = await axios.put(link,userData,config)\r\n\r\n    dispatch(\r\n        {type:UPDATE_USER_SUCCESS,\r\n            payload:data.success\r\n        })\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({type:UPDATE_USER_FAIL,\r\n                    payload:error.response.data.message})\r\n    }\r\n}\r\n\r\n//Update password \r\n\r\nexport const updatePassword =(passwords)=>async(dispatch)=>{\r\n\r\n    try {\r\n        dispatch({type:UPDATE_PASSWORD_REQUEST})\r\n      const config ={\r\n          headers:{\r\n              \"Content-Type\":\"application/json\"\r\n          }}  \r\n          const link = '/api/v1/password/update'\r\n\r\n          const {data} = await axios.put(link,passwords,config)\r\n          \r\n          dispatch({type:UPDATE_PASSWORD_SUCCESS,\r\n                    payload:data.success})\r\n    \r\n    } catch (error) {\r\n        dispatch({type:UPDATE_USER_FAIL,\r\n                    payload:error.response.data.message})\r\n    }\r\n}\r\n\r\n//forgot password\r\n\r\nexport const forgotPasswordA = (email)=>async(dispatch)=>{\r\n\r\n    try {\r\n\r\n        dispatch({type:FORGOT_PASSWORD_REQUEST})\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        const link = '/api/v1/password/forgot'\r\n\r\n        const {data} = await axios.post(link,email,config)\r\n        dispatch({type:FORGOT_PASSWORD_SUCCESS,\r\n                    payload:data.message\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({type:FORGOT_PASSWORD_FAIL,\r\n                    payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n//all users (ADMIN)\r\n\r\nexport const allUser = ()=>async(dispatch)=>{\r\n    try {\r\n\r\n        dispatch({type:ALL_USERS_REQUEST})\r\n\r\n        const {data}= await axios.get(`/api/v1/admin/users`)\r\n\r\n        dispatch({type:ALL_USERS_SUCCESS,\r\n            payload:data.users\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({type:ALL_USERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n//update user (ADMIN)\r\nexport const updateUsers=(id,userData)=>async(dispatch)=>{\r\n\r\n    try {\r\n\r\n        dispatch({type:UPDATE_USERS_REQUEST})\r\n\r\n        const config={\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n       \r\n        }\r\n        const {data}= await axios.put(`/api/v1/admin/user/${id}`,userData,config)\r\n\r\n        dispatch({type:UPDATE_USERS_SUCCESS,\r\n            payload:data.user\r\n        })\r\n    } catch (error) {\r\n        dispatch({type:UPDATE_USERS_FAIL,\r\n        payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteUsers =(id)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type:DELETE_USERS_REQUEST})\r\n\r\n        const {data}= await axios.delete(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({type:DELETE_USERS_SUCCESS,\r\n            payload:data.user\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({type:DELETE_USERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n//userDetails\r\n\r\nexport const getUserDetails=(id)=>async(dispatch)=>{\r\n\r\n    try {\r\n        dispatch({type:DETAILS_USERS_REQUEST})\r\n\r\n        const {data}= await axios.get(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({type:DETAILS_USERS_SUCCESS,\r\n            payload:data.user\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({type:DETAILS_USERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n//Reset password\r\n\r\nexport const resetPassword =(token,passwords)=> async(dispatch)=>{\r\n    try {\r\n        dispatch({type:NEW_PASSWORD_REQUEST})\r\n        \r\n        const config ={\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }}\r\n            const link = `/api/v1/password/reset/${token}`\r\n\r\n            const {data}= await axios.put(link,passwords,config)\r\n            dispatch({type:NEW_PASSWORD_SUCCESS,\r\n                    payload:data.success})\r\n        \r\n    } catch (error) {\r\n        dispatch({type:\r\n            NEW_PASSWORD_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//CLEAR ERROR\r\n\r\nexport const clearError = () => async(dispatch)=>{\r\n\r\n    dispatch({\r\n        type:CLEAR_ERROR\r\n    })\r\n\r\n}","import React, { Fragment, useEffect } from 'react'\r\nimport { Route, Router, Link } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useAlert} from 'react-alert'\r\nimport {logoutUser,clearError} from '../../actions/userActions'\r\nimport {loadUser, updatePassword, updateUser} from '../../actions/userActions'\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert()\r\n  const history = useHistory()\r\n \r\n\r\nconst { user, loading ,error} = useSelector(state => state.auth)\r\nconst {cartItems} = useSelector(state=>state.cart)\r\n\r\n//logout handler\r\nconst logoutHandler = () => {\r\n  dispatch(logoutUser());\r\n  alert.success('Logged out successfully.')\r\n}\r\n  return (\r\n    <Fragment>\r\n\r\n\r\n      <nav className=\"navbar row\">\r\n        <div className=\"col-12 col-md-3\">\r\n          <div className=\"navbar-brand\">\r\n            <Link to=\"/\">\r\n              <img src=\"./images/logo.png\" />\r\n            </Link>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n          <Route render={(history) => <Search history={history} />} />\r\n        </div>\r\n\r\n        <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n          <Link to='/cart' style={{ textDecoration: 'none' }}>\r\n            <span id=\"cart\" >Cart</span>\r\n            <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n          </Link>\r\n          {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n\r\n\r\n\r\n\r\n                  \r\n        </div>\r\n      </nav>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction footer() {\r\n    return (\r\n        <footer class=\"py-1\">\r\n        <p class=\"text-center  mt-1\">\r\n          Shopping Cart - 2021, All Rights Reserved\r\n        </p>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default footer\r\n","import React from 'react'\r\nimport {Helmet} from 'react-helmet'\r\n\r\nfunction Metadata({title}) {\r\n    return (\r\n       <Helmet>\r\n           <title>{`${title}-ShopIT`}</title>\r\n       </Helmet>\r\n    )\r\n}\r\n\r\nexport default Metadata\r\n","export const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST';\r\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS';\r\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL';\r\n//ADMIN PRODUCTS\r\nexport const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST';\r\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS';\r\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL';\r\n\r\n//Create products (ADMIN)\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\r\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\r\n\r\n//Delete product (ADMIN)\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\r\n\r\n//Update product\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\r\n\r\n//Product details\r\n\r\nexport const PRODUCT_DETAIL_REQUEST = 'PRODUCT_DETAIL_REQUEST';\r\nexport const PRODUCT_DETAIL_SUCCESS = 'PRODUCT_DETAIL_SUCCESS';\r\nexport const PRODUCT_DETAIL_FAIL = 'PRODUCT_DETAIL_FAIL';\r\n\r\n//Reviews\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\r\n\r\n//delete Reviews\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\r\n\r\n\r\n//Get reviews\r\n\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\r\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\r\n\r\n\r\n\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';","import axios from 'axios';\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    PRODUCT_DETAIL_REQUEST,\r\n    PRODUCT_DETAIL_SUCCESS,\r\n    PRODUCT_DETAIL_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n    CLEAR_ERROR,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL\r\n\r\n\r\n\r\n\r\n} from '../constans/productsConstans'\r\n\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//New product (ADMIN)\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n//DELETE product\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.reposnse.data.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n//Update product\r\n\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n\r\n        }\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.ErrMessage\r\n        })\r\n\r\n    }\r\n}\r\n\r\n//GET PRODUCT FOR ADMIN\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/admin/products')\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n}\r\n\r\n//Product details\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAIL_REQUEST })\r\n\r\n        let link = `/api/v1/product/${id}`\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAIL_SUCCESS,\r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAIL_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newReviewAction = (dataReview) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/review', dataReview, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data\r\n        })\r\n\r\n\r\n    }\r\n}\r\n//GET REVIEWS\r\nexport const allReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const deleteReviews=(id,productId)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type:DELETE_REVIEW_REQUEST})\r\n\r\n        const {data}= await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({type:DELETE_REVIEW_SUCCESS,\r\n            payload:data.success\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({type:DELETE_REVIEW_FAIL,\r\n        payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\n//CLEAR ERROR\r\n\r\nexport const clearError = () => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CLEAR_ERROR\r\n    })\r\n\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Product({product,col}) {\r\n    return (\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n        <div className=\"card p-3 rounded\">\r\n          <img\r\n            className=\"card-img-top mx-auto\"\r\n            src={product.images[0].url}\r\n          />\r\n          <div className=\"card-body d-flex flex-column\">\r\n            <h5 className=\"card-title\">\r\n              <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n            </h5>\r\n            <div className=\"ratings mt-auto\">\r\n              <div className=\"rating-outer\">\r\n                <div className=\"rating-inner\" style={{width:`${(product.ratings/5)*100}%`}}></div>\r\n              </div>\r\n              <span id=\"no_of_reviews\">({product.numOfReviews}Reviews)</span>\r\n            </div>\r\n            <p className=\"card-text\">${product.price}</p>\r\n            <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loader'>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../components/layout/Metadata'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useAlert } from 'react-alert';\r\nimport { getProducts } from '../actions/productActions'\r\nimport Product from './product/product'\r\nimport Loader from './layout/Loader'\r\n\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nfunction Home({ match }) {\r\n\r\n\r\n  const alert = useAlert();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, products, error, productCounts, resPerPage,filteredProductsCount } = useSelector(state => state.products)\r\n  //STATE FOR PAGINATION, FILTER\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [price, setPrice] = useState([1, 1000])\r\n  const [category, setCategory] = useState('')\r\n  const [rating,setRating]= useState(0)\r\n\r\n\r\n\r\n  const keyword = match.params.keyword\r\n\r\n  //UseEffect\r\n  useEffect(() => {\r\n\r\n\r\n    if (error) {\r\n      return alert.error(\"Desila se greska\")\r\n    } else {\r\n      dispatch(getProducts(keyword, currentPage, price, category,rating));\r\n      setTimeout(() => {\r\n        return alert.success('Uspesno!')\r\n      }, 1000)\r\n\r\n    }\r\n\r\n\r\n  }, [dispatch, keyword, alert, error, currentPage, price, category, rating])\r\n\r\n  const categories = [\r\n\r\n\r\n    'Electronics',\r\n    'Cameras',\r\n    'Laptops',\r\n    'Accessories',\r\n    'Headphones',\r\n    'Food',\r\n    \"Books\",\r\n    'Clothes/Shoes',\r\n    'Beauty/Health',\r\n    'Sports',\r\n    'Outdoor',\r\n    'Home'\r\n  ]\r\n\r\n  //SetCurrentPageNo\r\n  function setCurrentPageNo(pageNumber) {\r\n\r\n    setCurrentPage(pageNumber)\r\n  }\r\n\r\n  let count = productCounts;\r\n\r\n  if(keyword){\r\n    count = filteredProductsCount\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {loading ? <Loader /> : (\r\n\r\n        <Fragment>\r\n\r\n          <Metadata title={'Kupuj najbolje proizvode online'} />\r\n          <div className='container container-fluid'>\r\n            <h1 id=\"products_heading\">Latest Products</h1>\r\n\r\n            <section id=\"products\" class=\"container mt-5\">\r\n              <div class=\"row\">\r\n\r\n                {keyword ? (\r\n                  <Fragment>\r\n                    <div className='col-6 col-md-3 mt-5 mb-5'>\r\n                      <div className='px-5'>\r\n                        <Range\r\n                          marks={{\r\n                            1: \"$1\",\r\n                            1000: \"$1000\"\r\n                          }}\r\n                          min={1}\r\n                          max={1000}\r\n                          defaultValue={[1, 1000]}\r\n                          tipFormatter={value => `$${value}`}\r\n                          tipProps={{\r\n                            placement: \"top\",\r\n                            visible: true\r\n                          }}\r\n                          value={price}\r\n                          onChange={price => setPrice(price)}\r\n\r\n\r\n\r\n                        />\r\n                      </div>\r\n                          <hr className='my-5' />\r\n                      <div className='mt-5'>\r\n                        <h4 className='mb-3'>\r\n                          Kategorije\r\n                        </h4>\r\n                          <ul className=\"pl-0\">\r\n                            {categories.map(category=>(\r\n                              <li   style={{cursor:'pointer',\r\n                                            listStyleType:\"none\" }}\r\n                                    key={category}\r\n\r\n                                    onClick={()=>setCategory(category)}\r\n                              \r\n                              \r\n                              >\r\n                                {category}\r\n                              </li>\r\n                            ))}\r\n\r\n                          </ul>\r\n\r\n                      </div>\r\n                      <hr className='my-5' />\r\n                      <div className='mt-5'>\r\n                        <h4 className='mb-3'>\r\n                          Ratings\r\n                        </h4>\r\n                          <ul className=\"pl-0\">\r\n                            {[5,4,3,2,1].map(star=>(\r\n                              <li   style={{cursor:'pointer',\r\n                                            listStyleType:\"none\" }}\r\n                                    key={star}\r\n                                    onClick={()=>setRating(star)}\r\n                              \r\n                              \r\n                              >\r\n                               <div className='rating-outer'>\r\n                                 <div className='rating-inner'\r\n                                 \r\n                                      style={{width:`${star * 20}%`}}\r\n                                 >\r\n                                 \r\n                                 </div>\r\n\r\n                               </div>\r\n                              </li>\r\n                            ))}\r\n\r\n                          </ul>\r\n\r\n                      </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-6 col-md-9'>\r\n                      <div className='row'>\r\n                        {products && products.map(product => (\r\n\r\n                          <Product key={product._id} product={product} col={4} />\r\n\r\n                        ))}\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </Fragment>\r\n                ) : (\r\n\r\n                  products && products.map(product => (\r\n\r\n                    <Product key={product._id} product={product} col={3} />\r\n\r\n                  ))\r\n\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n            </section>\r\n            {resPerPage <= count && (\r\n              <div className=\"d-flex justify-content-center mt-5\">\r\n\r\n                <Pagination\r\n\r\n                  activePage={currentPage}\r\n                  itemsCountPerPage={resPerPage}\r\n                  totalItemsCount={productCounts}\r\n                  onChange={setCurrentPageNo}\r\n                  nextPageText={\"Next\"}\r\n                  prevPageText={\"Pre\"}\r\n                  firstPageText={\"First\"}\r\n                  lastPageText={\"Last\"}\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n\r\n                />\r\n\r\n              </div>\r\n            )}\r\n\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n\r\n\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_ITEM_TO_CART = 'REMOVE_ITEM_TO_CART'\r\n\r\nexport const SAVE_SHIPING_INFO = 'SAVE_SHIPING_INFO'","import axios from 'axios'\r\n import {ADD_TO_CART, REMOVE_ITEM_TO_CART, SAVE_SHIPING_INFO} from '../constans/cartConstans'\r\n\r\n\r\n export const addItemToCart =(id,quantity)=> async(dispatch,getState)=>{\r\n\r\n    const {data}= await axios.get(`/api/v1/product/${id}`);\r\n\r\n    dispatch({type:ADD_TO_CART,\r\n        payload:{\r\n            product:data.product._id,\r\n            name:data.product.name,\r\n            price:data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock:data.product.stock,\r\n            quantity\r\n\r\n\r\n\r\n        }\r\n    \r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n }\r\n\r\n export const removeItemToCart =(id)=> async(dispatch,getState)=>{\r\n\r\n\r\n    dispatch({type:REMOVE_ITEM_TO_CART,\r\n        payload:id\r\n    \r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n }\r\n\r\n\r\n export const saveShipingInfo=(data)=>async(dispatch)=>{\r\n\r\n    dispatch({type:SAVE_SHIPING_INFO,\r\n                payload:data})\r\n\r\n        localStorage.setItem('shipingInfo',JSON.stringify(data));\r\n }","import React from 'react'\r\nimport { Fragment } from 'react'\r\n\r\nconst ListReviews = ({reviews}) => {\r\n    return (\r\n        <Fragment>\r\n              <div class=\"container container-fluid\">\r\n\t\t<div class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review=>(\r\n                 <div class=\"review-card my-3\">\r\n                 <div class=\"rating-outer\">\r\n                     <div class=\"rating-inner\" style={{width:`${(review.rating/5)*100}%`}}></div>\r\n                 </div>\r\n                 <p class=\"review_user\">by {review.name}</p>\r\n                 <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                 <hr />\r\n             </div>\r\n                \r\n            ))}\r\n               \r\n        </div>\r\n    </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListReviews\r\n","import React, { useState } from 'react'\r\n\r\nimport {Carousel} from 'react-bootstrap'\r\nimport { Fragment,useEffect } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../layout/Loader';\r\nimport Metadata from '../layout/Metadata';\r\nimport {useAlert} from 'react-alert'\r\nimport {getProductDetails,newReviewAction,clearError} from '../../actions/productActions'\r\nimport {addItemToCart} from '../../actions/cartActions';\r\nimport { NEW_REVIEW_RESET } from '../../constans/productsConstans';\r\nimport ListReviews from '../reviews/ListReviews';\r\n\r\n\r\nconst ProductDetails= ({match}) => {\r\n\r\n    const alert = useAlert()\r\n    const dispatch= useDispatch();\r\n//STATE\r\n    const [quantity,setQuantity]= useState(1)\r\n    const [rating,setRatings]=useState(0)\r\n    const [comment,setComment]=useState('')\r\n\r\n    //USE SELECTOR\r\n    const {loading,error,product} = useSelector(state=>state.ProductDetails)\r\n\r\n    const {user}= useSelector(state=>state.auth)\r\n    const {error: reviewError,success}= useSelector(state=>state.NewReview)\r\n\r\n    \r\n //USE EFFECT\r\n    useEffect(()=>{\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n       if(error){\r\n           alert.error(error);\r\n           dispatch(clearError())\r\n       }\r\n\r\n       \r\n    \r\n    if(success){\r\n        alert.success('Uspesno ste dodali review')\r\n        dispatch({type:NEW_REVIEW_RESET})\r\n    }else{\r\n      console.log(reviewError)\r\n    }\r\n    },[dispatch,alert,error,reviewError,success,match.params.id])\r\n\r\n    const addToCart =()=>{\r\n        dispatch(addItemToCart(match.params.id,quantity))\r\n        alert.success('Uspesno ste dodali proizvod u kopri')\r\n    }\r\n\r\nconst decreaseQty = ()=>{\r\n    const count = document.querySelector('.count');\r\n\r\n    if(count.valueAsNumber <= 1) return;\r\n\r\n    const qty = count.valueAsNumber - 1\r\n    setQuantity(qty)\r\n}\r\n\r\n\r\n\r\nconst increaseQty=()=>{\r\n    const count = document.querySelector('.count');\r\n\r\n    if(count.valueAsNumber >= product.stock) return;\r\n\r\n    const qty = count.valueAsNumber + 1\r\n    setQuantity(qty)\r\n}\r\n\r\n\r\nfunction setUserRatings(){\r\n    const stars = document.querySelectorAll('.star')\r\n\r\n    stars.forEach((star,index)=>{\r\n        star.starValue = index + 1;\r\n\r\n        ['click','mouseover','mouseout'].forEach(function(e){\r\n            star.addEventListener(e, showRatings);\r\n        })\r\n    })\r\n\r\n    function showRatings(e){\r\n        stars.forEach((star,index)=>{\r\n            if(e.type ==='click'){\r\n                if(index < this.starValue){\r\n                    star.classList.add('orange')\r\n\r\n                    setRatings(this.starValue)\r\n                }else{\r\n                    star.classList.remove('orange')\r\n                }\r\n            }\r\n            if(e.type ==='mouseover'){\r\n\r\n                if(index < this.starValue){\r\n                    star.classList.add('yellow')\r\n                }else{\r\n                    star.classList.remove('yellow')\r\n                }\r\n                \r\n            }\r\n            if(e.type === 'mouseout'){\r\n                star.classList.remove('yellow')\r\n                \r\n            }\r\n            \r\n\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst reviewHandler=()=>{\r\n\r\n    const formData = new FormData();\r\n \r\n\r\n    formData.set('rating', rating);\r\n    formData.set('comment', comment);\r\n    formData.set('productId', match.params.id);\r\n\r\n    dispatch(newReviewAction(formData))\r\n}\r\n    return (\r\n<Fragment>\r\n\r\n{loading ? <Loader/>:(\r\n\r\n <Fragment>\r\n\r\n     <Metadata title={product.name} />\r\n\r\n <div className=\"container container-fluid\">\r\n     <div className=\"row f-flex justify-content-around\">\r\n         <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n         <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n         </div>\r\n\r\n         <div className=\"col-12 col-lg-5 mt-5\">\r\n             <h3>{product.name}</h3>\r\n             <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n             <hr />\r\n\r\n             <div className=\"rating-outer\">\r\n                 <div className=\"rating-inner\" style={{width:`${(product.ratings/5)*100}%`}}></div>\r\n             </div>\r\n             <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n             <hr />\r\n\r\n             <p id=\"product_price\">${product.price}</p>\r\n             <div className=\"stockCounter d-inline\">\r\n                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                 <input type=\"number\" className=\"form-control count d-inline\" value={quantity}  readOnly />\r\n\r\n                 <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n             </div>\r\n             <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n             <hr />\r\n\r\n                 <p>Status: <span id=\"stock_status\" className={product.stock>0 ? \"greenColor\" : \"redColor\"}>{product.stock>0 ? \"Na lageru\" : \"Nije na lageru\"}</span></p>\r\n\r\n                 <hr />\r\n\r\n                 <h4 className=\"mt-2\">Description:</h4>\r\n                 <p>{product.description}</p>\r\n                 <hr />\r\n                 <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n                                    {user ? \r\n                                    <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                    Submit Your Review \r\n                    </button>\r\n                                    \r\n                                 :(\r\n                                    <div className='alert alert-danger mt-5'>\r\n                                        Morate se logovati\r\n                                    </div>\r\n                                )}\r\n                 \r\n\r\n                 <div className=\"row mt-2 mb-5\">\r\n                     <div className=\"rating w-50\">\r\n\r\n                         <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                             <div className=\"modal-dialog\" role=\"document\">\r\n                                 <div className=\"modal-content\">\r\n                                     <div className=\"modal-header\">\r\n                                         <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                         <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                             <span aria-hidden=\"true\">&times;</span>\r\n                                         </button>\r\n                                     </div>\r\n                                     <div className=\"modal-body\">\r\n\r\n                                         <ul className=\"stars\" >\r\n                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                             <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                         </ul>\r\n\r\n                                         <textarea name=\"review\" id=\"review\" className=\"form-control mt-3\" value={comment} onChange={(e)=>setComment(e.target.value)}>\r\n\r\n                                         </textarea>\r\n\r\n                                         <button className=\"btn my-3 float-right review-btn px-4 text-white\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={reviewHandler}>Submit</button>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n\r\n                     </div>\r\n\r\n                 </div>\r\n\r\n                         \r\n         </div>\r\n\r\n     </div>\r\n </div>\r\n\r\n {product.reviews && product.reviews.length > 0 && (\r\n   <ListReviews reviews={product.reviews} />\r\n )}\r\n</Fragment>\r\n\r\n)}  \r\n</Fragment>\r\n  \r\n\r\n       \r\n\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n","\r\nimport React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAlert } from 'react-alert';\r\nimport Loader from '../../components/layout/Loader'\r\nimport {login , clearError} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Login = ({location}) => {\r\n    const alert = useAlert()\r\n    const history = useHistory()\r\n    const { isAuthUser, loading, error } = useSelector(state =>state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n    //STATE \r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(()=>{\r\n\r\n        if(isAuthUser){\r\n            history.push(redirect)\r\n        }\r\n        \r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearError());\r\n        }\r\n\r\n    \r\n    },[dispatch,isAuthUser,error,alert,history,redirect])\r\n\r\nconst submitHandler = (e)=>{\r\n    e.preventDefault();\r\n\r\n    dispatch(login(email,password))\r\n\r\n\r\n}\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n{loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <Metadata title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n       \r\n </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {register} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Register = () => {\r\n\r\n\r\n    const alert = useAlert()\r\n    const history = useHistory()\r\n    const { isAuthUser, loading, error } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n    //STATE \r\n    const [user, setUser] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:''\r\n    })\r\n    const {name,email,password}=user\r\nconst [avatar,setAvatar]=useState('')\r\nconst [avatarPreview,setAvatarPreview]=useState('/images/default_avatar.jpg')\r\n\r\n    useEffect(()=>{\r\n\r\n        if(isAuthUser){\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error)\r\n        }\r\n\r\n\r\n    \r\n    },[dispatch,loading,isAuthUser,error,alert,history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        if (e.target.name === \"avatar\") {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }else{\r\n                    console.log('GRESKA')\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]:e.target.value })\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n\r\n        <Metadata title={`Register -USER`} />\r\n        <div className=\"row wrapper\">\r\n\t\t<div className=\"col-10 col-lg-5\">\r\n        <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n            <h1 className=\"mb-3\">Register</h1>\r\n\r\n          <div className=\"form-group\">\r\n            <label for=\"email_field\">Name</label>\r\n            <input type=\"name\" id=\"name_field\" className=\"form-control\"\r\n            \r\n            name='name'\r\n             value={name}\r\n             onChange={onChange} />\r\n          </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                name='email'\r\n             value={email}\r\n             onChange={onChange} />\r\n              \r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                name='password'\r\n             value={password}\r\n             onChange={onChange} />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label htmlFor='avatar_upload'>Avatar</label>\r\n              <div className='d-flex align-items-center'>\r\n                  <div>\r\n                      <figure className='avatar mr-3 item-rtl'>\r\n                          <img\r\n                              src={avatarPreview}\r\n                              className='rounded-circle'\r\n                              alt='AvatarPreview'\r\n                          />\r\n                      </figure>\r\n                  </div>\r\n                  <div className='custom-file'>\r\n                      <input\r\n                          type='file'\r\n                          name='avatar'\r\n                          className='custom-file-input'\r\n                          id='customFile'\r\n                          accept=\"images/*\"\r\n                                        onChange={onChange}\r\n                      />\r\n                      <label className='custom-file-label' htmlFor='customFile'>\r\n                          Choose Avatar\r\n                      </label>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  \r\n            <button\r\n              id=\"register_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n              disabled={loading ? true : false}\r\n            >\r\n              REGISTER\r\n            </button>\r\n          </form>\r\n\t\t  </div>\r\n    </div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","export const NEW_ORDER_REQUEST = 'NEW_ORDER_REQUEST'\r\nexport const NEW_ORDER_SUCCESS = 'NEW_ORDER_SUCCESS'\r\nexport const NEW_ORDER_FAIL = 'NEW_ORDER_FAIL'\r\n\r\nexport const SHOW_ORDER_REQUEST = 'SHOW_ORDER_REQUEST'\r\nexport const SHOW_ORDER_SUCCESS = 'SHOW_ORDER_SUCCESS'\r\nexport const SHOW_ORDER_FAIL = 'SHOW_ORDER_FAIL'\r\n\r\n//Admin all orders\r\n\r\nexport const ALL_ORDER_REQUEST = 'ALL_ORDER_REQUEST'\r\nexport const ALL_ORDER_SUCCESS = 'ALL_ORDER_SUCCESS'\r\nexport const ALL_ORDER_FAIL = 'ALL_ORDER_FAIL'\r\n//Update orders\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_FAIL'\r\n\r\n//delete orders admin\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_FAIL'\r\n\r\nexport const ORDER_DETAIL_REQUEST = 'ORDER_DETAIL_REQUEST'\r\nexport const ORDER_DETAIL_SUCCESS = 'ORDER_DETAIL_SUCCESS'\r\nexport const ORDER_DETAIL_FAIL = 'ORDER_DETAIL_FAIL'\r\n\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport {productsReducers,productDetails,newReview,newProductReducer,deleteProductReducer,getReviews,deleteReviews} from './reducers/productsReducers'\r\nimport {authReducer, userReducer,forgotPassword,allUsersReducer,userDetails} from './reducers/userReducer'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {orderReducer,showOrders,getOrderDetails,allOrdersReducer,updateOrdersReducer} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducers,\r\n    newProduct:newProductReducer,\r\n    deleteProduct:deleteProductReducer,\r\n    ProductDetails:productDetails,\r\n    auth:authReducer,\r\n    user:userReducer,\r\n    userDetail:userDetails,\r\n    forgotPassword:forgotPassword,\r\n    allUser:allUsersReducer,\r\n    cart: cartReducer,\r\n    newOrder:orderReducer,\r\n    allOrders:allOrdersReducer,\r\n    showOrders:showOrders,\r\n    orderDetails:getOrderDetails,\r\n    updateOrders:updateOrdersReducer,\r\n    NewReview:newReview,\r\n    AllReviews:getReviews,\r\n    reviewsReducer:deleteReviews\r\n\r\n})\r\n\r\n\r\nlet initialState ={\r\n    cart:{\r\n        cartItems:localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\r\n        shipingInfo:localStorage.getItem('shipingInfo') ? JSON.parse(localStorage.getItem('shipingInfo')) : {}\r\n    }\r\n}\r\n\r\nlet middlware = [thunk]\r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\n\r\nexport default store","import {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    PRODUCT_DETAIL_REQUEST,\r\n    PRODUCT_DETAIL_SUCCESS,\r\n    PRODUCT_DETAIL_FAIL,\r\n    CLEAR_ERROR,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    NEW_REVIEW_RESET,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    NEW_PRODUCT_RESET,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_RESET,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_RESET,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL\r\n\r\n\r\n\r\n} from '../constans/productsConstans'\r\n\r\nexport const productsReducers =(state = { products: [] }, action) =>{\r\n\r\n    switch(action.type){\r\n    case ALL_PRODUCTS_REQUEST:\r\n    case ADMIN_PRODUCTS_REQUEST:\r\n        return{\r\n            loading:true,\r\n            products:[]\r\n        }\r\n    case ALL_PRODUCTS_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            products: action.payload.products,\r\n            productCounts:action.payload.productCounts,\r\n            resPerPage:action.payload.resPerPage,\r\n            filteredProductsCount:action.payload.filteredProductsCount\r\n        }\r\n    case ADMIN_PRODUCTS_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            products:action.payload\r\n        }\r\n    case ALL_PRODUCTS_FAIL:\r\n    case ADMIN_PRODUCTS_FAIL:\r\n        return{\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n    case CLEAR_ERROR:\r\n        return{\r\n            ...state,\r\n            error:null\r\n        }\r\n\r\n\r\n\r\n        default: return state\r\n    }\r\n\r\n   \r\n    \r\n}\r\n\r\nexport const newProductReducer=(state = { product: {} }, action)=>{\r\n\r\n    switch(action.type){\r\n\r\n        case NEW_PRODUCT_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:action.payload.success,\r\n                product:action.payload.product\r\n            }\r\n        case NEW_PRODUCT_FAIL:\r\n            return{\r\n                ...state,\r\n                error:action.payload\r\n            }\r\n        case NEW_PRODUCT_RESET:\r\n            return{\r\n                ...state,\r\n                success:false\r\n\r\n                \r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//DELETE PRODUCT\r\n\r\nexport const deleteProductReducer=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n    case DELETE_PRODUCT_REQUEST:\r\n    case UPDATE_PRODUCT_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case DELETE_PRODUCT_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            isDeleted:action.payload\r\n        }\r\n    case UPDATE_PRODUCT_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            isUpdated:action.payload\r\n        }\r\n    case DELETE_PRODUCT_FAIL:\r\n    case UPDATE_PRODUCT_FAIL:\r\n        return{\r\n            ...state,\r\n            error:action.payload\r\n        }\r\n    case DELETE_PRODUCT_RESET:\r\n    \r\n        return{\r\n            ...state,\r\n            isDeleted:false\r\n        }\r\n    case UPDATE_PRODUCT_RESET:\r\n        return{\r\n            ...state,\r\n            idUpdated:false\r\n        }\r\n    case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n           return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetails =(state={product:{}},action)=>{\r\n\r\n    switch(action.type){\r\n        case PRODUCT_DETAIL_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case PRODUCT_DETAIL_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                product: action.payload\r\n            }\r\n        case PRODUCT_DETAIL_FAIL:\r\n            return{\r\n                loading:true,\r\n                error:action.payload\r\n            }\r\n\r\n\r\n        default:return state\r\n    }\r\n}\r\n\r\nexport const newReview=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n\r\n        case NEW_REVIEW_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case NEW_REVIEW_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:action.payload\r\n            }\r\n        case NEW_REVIEW_FAIL:\r\n            return{\r\n                ...state,\r\n                error:action.payload\r\n            }\r\n        case NEW_REVIEW_RESET:\r\n            return{\r\n                ...state,\r\n                success:false\r\n\r\n                \r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getReviews=(state={reviews:[]},action)=>{\r\n\r\n    switch(action.type){\r\n    \r\n    case GET_REVIEWS_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case GET_REVIEWS_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            reviews:action.payload\r\n        }\r\n    case GET_REVIEWS_FAIL:\r\n        return{\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const deleteReviews=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n\r\n    case DELETE_REVIEW_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case DELETE_REVIEW_SUCCESS:\r\n        return{\r\n\r\n            ...state,\r\n            loading:false,\r\n            isDeleted:action.payload\r\n\r\n        }\r\n    case DELETE_REVIEW_RESET:\r\n        return{\r\n            ...state,\r\n            isDeleted:false\r\n        }\r\n    case DELETE_REVIEW_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n\r\n\r\n        default: return state\r\n    }\r\n}","import {\r\nLOGIN_REQUEST,\r\nLOGIN_SUCCESS,\r\nLOGIN_FAIL,\r\nREGISTER_USER_REQUEST,\r\nREGISTER_USER_SUCCESS,\r\nREGISTER_USER_FAIL,\r\nLOAD_USER_REQUEST,\r\nLOAD_USER_SUCCESS,\r\nLOAD_USER_FAIL,\r\nUPDATE_USER_REQUEST,\r\nUPDATE_USER_SUCCESS,\r\nUPDATE_USER_RESET,\r\nUPDATE_USER_FAIL,\r\nLOGOUT_SUCCESS,\r\nLOGOUT_FAIL,\r\nCLEAR_ERROR,\r\nUPDATE_PASSWORD_REQUEST,\r\nUPDATE_PASSWORD_SUCCESS,\r\nUPDATE_PASSWORD_FAIL,\r\nUPDATE_PASSWORD_RESET,\r\nFORGOT_PASSWORD_REQUEST,\r\nFORGOT_PASSWORD_SUCCESS,\r\nFORGOT_PASSWORD_FAIL,\r\nNEW_PASSWORD_REQUEST,\r\nNEW_PASSWORD_SUCCESS,\r\nNEW_PASSWORD_FAIL,\r\nALL_USERS_REQUEST,\r\nALL_USERS_SUCCESS,\r\nALL_USERS_FAIL,\r\nUPDATE_USERS_FAIL,\r\nUPDATE_USERS_SUCCESS,\r\nUPDATE_USERS_REQUEST,\r\nUPDATE_USERS_RESET,\r\nDETAILS_USERS_REQUEST,\r\nDETAILS_USERS_SUCCESS,\r\nDETAILS_USERS_FAIL,\r\nDELETE_USERS_REQUEST,\r\nDELETE_USERS_SUCCESS,\r\nDELETE_USERS_RESET,\r\nDELETE_USERS_FAIL\r\n} from '../constans/userConstans'\r\n\r\nexport const authReducer =(state={user:{}},action)=>{\r\n\r\nswitch(action.type){\r\n    case LOGIN_REQUEST:\r\n    case REGISTER_USER_REQUEST:\r\n    case LOAD_USER_REQUEST:\r\n        return{\r\n            loading:true,\r\n            isAuthUser:false,\r\n\r\n        }\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_USER_SUCCESS:\r\n    case LOAD_USER_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            isAuthUser:true,\r\n            user:action.payload\r\n        }\r\n        case LOGOUT_SUCCESS:\r\n        return{\r\n            \r\n            loading: false,\r\n            isAuthUser: false,\r\n            user: null\r\n        }\r\n  \r\n    \r\n\r\n        case LOAD_USER_FAIL:\r\n            return{\r\n                \r\n                loading:false,\r\n                isAuthUser:false,\r\n                user:null,\r\n                error:action.payload\r\n    \r\n            }\r\n\r\n            case LOGOUT_FAIL:\r\n                return{\r\n                    ...state,\r\n                    error:action.payload\r\n                }\r\n\r\n \r\n   \r\n    case LOGIN_FAIL:\r\n    case REGISTER_USER_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            isAuthUser:false,\r\n            user:null,\r\n            error:action.payload\r\n        }\r\n    case CLEAR_ERROR:\r\n        return{\r\n            ...state,\r\n            error:null\r\n        }\r\n\r\n    default:\r\n        return state\r\n}\r\n\r\n}\r\n\r\nexport const userReducer = (state={},action)=>{\r\n\r\n    switch(action.type){\r\n    case UPDATE_USER_REQUEST:\r\n    case UPDATE_PASSWORD_REQUEST:\r\n    case UPDATE_USERS_REQUEST:\r\n    case DELETE_USERS_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true,\r\n\r\n        }\r\n    case UPDATE_USER_SUCCESS:\r\n    case UPDATE_PASSWORD_SUCCESS:\r\n    case UPDATE_USERS_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            isUpdated:action.payload\r\n        }\r\n    case DELETE_USERS_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            isDeleted:action.payload\r\n        }\r\n    case UPDATE_USER_RESET:\r\n    case UPDATE_PASSWORD_RESET:\r\n    case UPDATE_USERS_RESET:\r\n        return{\r\n            ...state,\r\n            isUpdated:false\r\n        }\r\n    case DELETE_USERS_RESET:\r\n        return{\r\n            ...state,\r\n            isDeleted:false\r\n        }\r\n    case UPDATE_USER_FAIL:\r\n    case UPDATE_PASSWORD_FAIL:\r\n    case UPDATE_USERS_FAIL:\r\n    case DELETE_USERS_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetails=(state={user:{}},action)=>{\r\n    switch(action.type){\r\n    case DETAILS_USERS_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case DETAILS_USERS_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            user:action.payload\r\n        }\r\n    case DETAILS_USERS_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const forgotPassword= (state={},action)=>{\r\n    switch(action.type){\r\n\r\n    case FORGOT_PASSWORD_REQUEST:\r\n    case NEW_PASSWORD_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true,\r\n            error:null\r\n        }\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            message:action.payload\r\n        }\r\n    case NEW_PASSWORD_SUCCESS:\r\n        return{\r\n            ...state,\r\n            success:action.payload\r\n        }\r\n    case FORGOT_PASSWORD_FAIL:\r\n    case NEW_PASSWORD_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const allUsersReducer = (state={users:[]},action)=>{\r\n    switch(action.type){\r\n    case ALL_USERS_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case ALL_USERS_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            users:action.payload\r\n        }\r\n    case ALL_USERS_FAIL:\r\n        return{\r\n            ...state,\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n    \r\n\r\n        default: return state\r\n    }\r\n\r\n}","import {ADD_TO_CART, REMOVE_ITEM_TO_CART, SAVE_SHIPING_INFO} from '../constans/cartConstans'\r\n\r\n\r\n\r\nexport const cartReducer = (state={  cartItems:[],  shipingInfo:{} },action)=>{\r\n\r\n    switch(action.type){\r\n\r\n    case ADD_TO_CART:\r\n            const item = action.payload;\r\n          \r\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n\r\n            if(isItemExist){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i=> i.product === item.product ? item : i)\r\n                }\r\n\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,item]\r\n                }\r\n            }\r\n        case REMOVE_ITEM_TO_CART:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(i=>i.product !== action.payload)\r\n            }\r\n        case SAVE_SHIPING_INFO:\r\n            return{\r\n                ...state,\r\n                shipingInfo:action.payload\r\n            }\r\n     \r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    NEW_ORDER_REQUEST,\r\n    NEW_ORDER_SUCCESS,\r\n    NEW_ORDER_FAIL,\r\n    SHOW_ORDER_REQUEST,\r\n    SHOW_ORDER_SUCCESS,\r\n    SHOW_ORDER_FAIL,\r\n    ALL_ORDER_REQUEST,\r\n    ALL_ORDER_SUCCESS,\r\n    ALL_ORDER_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAIL_REQUEST,\r\n    ORDER_DETAIL_SUCCESS,\r\n    ORDER_DETAIL_FAIL,\r\n    CLEAR_ERROR,\r\n    UPDATE_ORDER_RESET\r\n} from '../constans/orderContstans'\r\n\r\n\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case NEW_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n        case NEW_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case NEW_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const showOrders = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ORDER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case SHOW_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case SHOW_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getOrderDetails = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ORDER_DETAIL_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DETAIL_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAIL_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n\r\n    switch(action.type){\r\n    \r\n    case ALL_ORDER_REQUEST:\r\n        return{\r\n           \r\n            loading:true\r\n        }\r\n    case ALL_ORDER_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            orders:action.payload.orders,\r\n            totalAmount: action.payload.totalAmount\r\n        }\r\n    case ALL_ORDER_FAIL:\r\n        return{\r\n            loading:false,\r\n            error:action.payload\r\n        }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n\r\n        default: return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateOrdersReducer = (state={},action)=>{\r\n\r\n    switch(action.type){\r\n    \r\n    case UPDATE_ORDER_REQUEST:\r\n    case DELETE_ORDER_REQUEST:\r\n        return{\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case UPDATE_ORDER_SUCCESS:\r\n        return{\r\n            loading:false,\r\n            isUpdated:action.payload\r\n        }\r\n    case DELETE_ORDER_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                isDeleted:action.payload\r\n            }\r\n    case UPDATE_ORDER_FAIL:\r\n    case DELETE_ORDER_FAIL:\r\n        return{\r\n           ...state,\r\n            error:action.payload\r\n        }\r\n    case UPDATE_ORDER_RESET:\r\n        return{\r\n            ...state,\r\n            isUpdated:false\r\n        }\r\n    case DELETE_ORDER_RESET:\r\n            return{\r\n                ...state,\r\n                isDeleted:false\r\n            }\r\n    \r\n    case CLEAR_ERROR:\r\n        return{\r\n            ...state,\r\n            error:null\r\n        }\r\n\r\n\r\n        default: return state\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../layout/Loader'\r\nimport Metadata from '../layout/Metadata'\r\n\r\nconst Profile = () => {\r\n\r\n    const { loading, user } = useSelector(state => state.auth)\r\n    return (\r\n\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n\r\n\r\n                <Fragment>\r\n                    <Metadata title={'User-Profile'} />\r\n                    <div className=\"container container-fluid\">\r\n                        <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n                        <div className=\"row justify-content-around mt-5 user-info\">\r\n                            <div className=\"col-12 col-md-3\">\r\n                                <figure className='avatar avatar-profile'>\r\n                                    <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                                </figure>\r\n                                <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\r\n                                    Edit Profile\r\n                </Link>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-5\">\r\n                                <h4>Full Name</h4>\r\n                                <p>{user.name}</p>\r\n\r\n                                <h4>Email Address</h4>\r\n                                <p>{user.email}</p>\r\n                                <h4>Joined on</h4>\r\n                                <p>{String(user.createAt).substring(0, 10)}</p>\r\n                                {user.role !== 'admin' && (\r\n                                    <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\r\n                                        My Orders\r\n                                    </Link>\r\n                                )}\r\n\r\n\r\n                                <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                    Change Password\r\n                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { Fragment } from 'react'\r\nimport { Component } from 'react'\r\nimport { Redirect, Route, } from 'react-router-dom'\r\nimport { useSelector} from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ isAdmin,component: Component, ...rest }) => {\r\n\r\n    const { isAuthUser, loading, user } = useSelector(state => state.auth)\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n\r\n                    {...rest}\r\n                    render={props => {\r\n                        if (isAuthUser === false) {\r\n                            return <Redirect to='/login' />\r\n                        }\r\n\r\n                        if(isAdmin === true && user.role!== 'admin'){\r\n                            return <Redirect to=\"/\" />\r\n                        }\r\n                        return <Component { ...props } />\r\n                    }\r\n                    }\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {updateUser,loadUser,clearError} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {UPDATE_USER_RESET} from '../../constans/userConstans'\r\n\r\nconst UpdateProfile = () => {\r\n    const alert = useAlert()\r\n    const history = useHistory()\r\n    const { user } = useSelector(state => state.auth)\r\n    const {error,isUpdated,loading}= useSelector(state=>state.user)\r\n\r\n    const [name,setName]=useState('')\r\n    const [email,setEmail]=useState('');\r\n    const [avatar,setAvatar]=useState('')\r\n    const [avatarPreview,setAvatarPreview]=useState('/images/default-avatar.jpg')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n\r\n        if(user){\r\n           setName(user.name)\r\n           setEmail(user.email)\r\n           setAvatarPreview(user.avatar.url)\r\n           \r\n        }\r\n\r\n        if(error){\r\n            dispatch(clearError())\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n        \r\n    },[dispatch,error,history,user,alert,isUpdated])\r\n\r\n    const submitHandler=(e)=>{\r\n\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n\r\n        formData.set('name',name)\r\n        formData.set('email',email)\r\n        formData.set('avatar',avatar)\r\n\r\n        dispatch(updateUser(formData))\r\n\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }else{\r\n                alert.error('Greska')\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={`Update Profile`} />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input \r\n\t\t\t\t\t\t\t\ttype=\"name\" \r\n\t\t\t\t\t\t\t\tid=\"name_field\" \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e)=>setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='images/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {updatePassword,loadUser,clearError} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {UPDATE_PASSWORD_RESET} from '../../constans/userConstans'\r\n\r\n\r\n//component\r\nconst UpdatePassword = () => {\r\n\r\nconst alert = useAlert();\r\nconst dispatch = useDispatch();\r\nconst history = useHistory();\r\n\r\n//state\r\nconst [oldPassword,setOldPassword]= useState('');\r\nconst [password,setPassword]= useState('');\r\n\r\nconst {loading,error,isUpdated}= useSelector(state=>state.user)\r\n\r\n//useEffect\r\n\r\nuseEffect(()=>{\r\n\r\nif(error){\r\n    dispatch(clearError())\r\n    alert.error(\"Desila se greska\");  \r\n}\r\n\r\nif(isUpdated){\r\n    alert.success('Uspesno ste promenili password')\r\n    dispatch(loadUser())\r\n    history.push('/me')\r\n    dispatch({type:UPDATE_PASSWORD_RESET})\r\n}\r\n\r\n},[dispatch,alert,history,error,isUpdated])\r\n\r\n\r\n//Handler form\r\n\r\nconst submitHandler= (e)=>{\r\n    e.preventDefault()\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.set('oldPassword',oldPassword);\r\n    formData.set('password',password)\r\n\r\n    dispatch(updatePassword(formData))\r\n}\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={`Change Password`}/>\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form onSubmit={submitHandler} className=\"shadow-lg\">\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e)=>setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e)=>setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false}>Update Password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {forgotPasswordA,loadUser,clearError} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n//state\r\nconst [email,setEmail]= useState('');\r\n\r\n//useSelector\r\nconst {loading,error,message}= useSelector(state=>state.forgotPassword)\r\n\r\n//useEffect\r\nuseEffect(()=>{\r\n\r\n    if(error){\r\n        alert.error(\"Desila se greska\")\r\n        dispatch(clearError())\r\n    }\r\n\r\n    if(message){\r\n        alert.success(`Link za resetovanje lozinke je poslat na ${email}`)\r\n        history.push('/')\r\n        \r\n    }\r\n\r\n},[dispatch,error,message,alert])\r\n\r\nconst sumbitHandler=(e)=>{\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData()\r\n\r\n    formData.set('email',email)\r\n\r\n    dispatch(forgotPasswordA(formData))\r\n\r\n}\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Forgot Password'} />\r\n            <div class=\"row wrapper\">\r\n                <div class=\"col-10 col-lg-5\">\r\n                    <form class=\"shadow-lg\" onSubmit={sumbitHandler}>\r\n                        <h1 class=\"mb-3\">Forgot Password</h1>\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                class=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            class=\"btn btn-block py-3\">\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {resetPassword,clearError} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst NewPassword = ({match}) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n//state\r\nconst [password,setPassword]= useState('');\r\nconst [confirmPassword,setConfirmPassword]=useState('')\r\n\r\n//useSelector\r\nconst {error,success}= useSelector(state=>state.forgotPassword)\r\nuseEffect(()=>{\r\n\r\n    if(error){\r\n        alert.error(error)\r\n        dispatch(clearError())\r\n    }\r\n   \r\n     if(success){\r\n         alert.success('Uspesno ste resetovali lozinku')\r\n         history.push('/login')\r\n     }\r\n\r\n     \r\n\r\n},[dispatch,history,error,success,alert])\r\n\r\nconst sumbitHandler =(e)=>{\r\n    e.preventDefault()\r\n    const formData = new FormData();\r\n\r\n    formData.set('password',password);\r\n    formData.set('confirmPassword',confirmPassword)\r\n\r\n    dispatch(resetPassword(match.params.token,formData))\r\n   \r\n}\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'New Password'} />\r\n            <div class=\"row wrapper\">\r\n            <div class=\"col-10 col-lg-5\">\r\n                <form onSubmit={sumbitHandler} class=\"shadow-lg\">\r\n                    <h1 class=\"mb-3\">New Password</h1>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password_field\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password_field\"\r\n                            class=\"form-control\"\r\n                            value={password}\r\n                            onChange={(e)=>setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"confirm_password_field\">Confirm Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_password_field\"\r\n                            class=\"form-control\"\r\n                            value={confirmPassword}\r\n                            onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <button\r\n                        id=\"new_password_button\"\r\n                        type=\"submit\"\r\n                        class=\"btn btn-block py-3\">\r\n                        Set Password\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport { Fragment,useEffect } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport {addItemToCart, removeItemToCart} from '../../actions/cartActions';\r\n\r\n\r\nconst Cart = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const {cartItems} = useSelector(state=>state.cart)\r\n\r\n    const decreaseQty = (id,quantity)=>{\r\n        const newQty = quantity - 1;\r\n\r\n    \r\n        if(newQty <= 0 ) return;\r\n    \r\n        dispatch(addItemToCart(id,newQty))\r\n    }\r\n    \r\n    \r\n    \r\n    const increaseQty=(id,quantity,stock)=>{\r\n        const newQty = quantity + 1;\r\n\r\n    \r\n        if(newQty > stock) return;\r\n    \r\n        dispatch(addItemToCart(id,newQty))\r\n    }\r\n\r\n    const removeCartItemHandler=(id)=>{\r\n        dispatch(removeItemToCart(id))\r\n    }\r\n\r\n    const chekOutHandler = ()=>{\r\n        history.push('/login?redirect=shiping')\r\n    }\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Your cart'} />\r\n            {cartItems.length === 0 ? <h2 classNameName='mt-5'>Vasa korpa je prazna</h2> : (\r\n                <Fragment>\r\n                     <div class=\"container container-fluid\">\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length}</b></h2>\r\n        \r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n                          {cartItems.map(item=>(\r\n                              <Fragment>\r\n                                  <div className=\"cart-item\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-3\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                    </div>\r\n            \r\n                                    <div className=\"col-5 col-lg-3\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n            \r\n            \r\n                                    <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                        <p id=\"card_item_price\">{`$${item.price}`}</p>\r\n                                    </div>\r\n            \r\n                                    <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                        <div className=\"stockCounter d-inline\">\r\n                                            <span className=\"btn btn-danger minus\" onClick={()=>decreaseQty(item.product,item.quantity)}>-</span>\r\n                                            <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n            \r\n                                            <span className=\"btn btn-primary plus\" onClick={()=>increaseQty(item.product,item.quantity,item.stock)}>+</span>\r\n                                        </div>\r\n                                    </div>\r\n            \r\n                                    <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                        <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={()=>removeCartItemHandler(item.product)}></i>\r\n                                    </div>\r\n            \r\n                                </div>\r\n                            </div>\r\n                              </Fragment>\r\n\r\n                          ))}\r\n                            \r\n                            <hr />\r\n                        </div>\r\n            \r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc +item.quantity*item.price, 0).toFixed(2)} (Units)</span></p>\r\n                \r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={chekOutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    </Fragment>\r\n            )}\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutSteps = ({ shiping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className='checkout-progress d-flex justify-content-center mt-5'>\r\n\r\n            {shiping ? <Link to='/shiping' className='float-right' >\r\n\r\n                <div className='triangle2-active'></div>\r\n                <div className='step active-step'>Shipping</div>\r\n                <div className='triangle-active'></div>\r\n            </Link> : <Link to='#!' disabled >\r\n                <div className='triangle2-incomplete'></div>\r\n                <div className='step incomplete'>Shipping</div>\r\n                <div className='triangle-incomplete'></div>\r\n            </Link>}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className='float-right' >\r\n\r\n                <div className='triangle2-active'></div>\r\n                <div className='step active-step'>Confirm Order</div>\r\n                <div className='triangle-active'></div>\r\n            </Link> : <Link to='#!' disabled >\r\n                <div className='triangle2-incomplete'></div>\r\n                <div className='step incomplete'>Confirm Order</div>\r\n                <div className='triangle-incomplete'></div>\r\n            </Link>}\r\n\r\n            {payment ? <Link to='/payment' className='float-right' >\r\n\r\n                <div className='triangle2-active'></div>\r\n                <div className='step active-step'>Payment</div>\r\n                <div className='triangle-active'></div>\r\n            </Link> : <Link to='#!' disabled >\r\n                <div className='triangle2-incomplete'></div>\r\n                <div className='step incomplete'>Payment</div>\r\n                <div className='triangle-incomplete'></div>\r\n            </Link>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\nimport { countries } from 'countries-list'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { saveShipingInfo } from '../../actions/cartActions';\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\n\r\nconst Shiping = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { shipingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shipingInfo.address)\r\n    const [city, setCity] = useState(shipingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shipingInfo.postalCode)\r\n    const [PhoneNo, setPhoneNo] = useState(shipingInfo.PhoneNo)\r\n    const [country, setCountry] = useState(shipingInfo.country)\r\n\r\n    const countryList = Object.values(countries)\r\n\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(saveShipingInfo({address, city, postalCode, PhoneNo, country}))\r\n        history.push('/order/confirm')\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Shiping Info'} />\r\n            <CheckoutSteps shiping/>\r\n            <div class=\"row wrapper\">\r\n                <div class=\"col-10 col-lg-5\">\r\n                    <form class=\"shadow-lg\" onSubmit={sumbitHandler}>\r\n                        <h1 class=\"mb-4\">Shipping Info</h1>\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                class=\"form-control\"\r\n                                value={address}\r\n                                required\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                class=\"form-control\"\r\n                                value={city}\r\n                                required\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                class=\"form-control\"\r\n                                value={PhoneNo}\r\n                                required\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                class=\"form-control\"\r\n                                value={postalCode}\r\n                                required\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                    id=\"country_field\"\r\n                                    class=\"form-control\"\r\n                                   \r\n                                    value={country}\r\n                                    required\r\n                                    onChange={(e)=>setCountry(e.target.value)}\r\n                                >\r\n                            {countryList.map(country => (\r\n\r\n                                \r\n                                    <option  key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n\r\n                               \r\n                            ))}\r\n                            </select>\r\n\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            class=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shiping\r\n","import React from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Fragment } from 'react'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nconst ConfirmOrders = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const { cartItems, shipingInfo } = useSelector(state => state.cart)\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    //calculate\r\n\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n\r\n    const shipingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shipingPrice + taxPrice).toFixed(2)\r\n\r\n    const proccesToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shipingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container container-fluid\">\r\n                <Metadata title={'Confirm Order'} />\r\n                <CheckoutSteps shiping confirmOrder />\r\n\r\n                <div className=\"row d-flex justify-content-between\">\r\n                    <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                        <h4 className=\"mb-3\">Shipping Info</h4>\r\n                        <p><b>Name:</b>{user && user.name}</p>\r\n                        <p><b>Phone:</b> {shipingInfo.PhoneNo}</p>\r\n                        <p className=\"mb-4\"><b>Address:</b>{`${shipingInfo.address}, ${shipingInfo.city}, ${shipingInfo.postalCode}, ${shipingInfo.country}`}</p>\r\n\r\n                        <hr />\r\n                        <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n                        {cartItems.map(item => (\r\n\r\n                            <Fragment>\r\n                                <hr />\r\n                                <div className=\"cart-item my-1\" key={item.product}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-6\">\r\n                                            <Link to={`/product/${item.product}`} >{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </Fragment>\r\n\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-3 my-4\">\r\n                        <div id=\"order_summary\">\r\n                            <h4>Order Summary</h4>\r\n                            <hr />\r\n                            <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                            <p>Shipping: <span className=\"order-summary-values\">${shipingPrice}</span></p>\r\n                            <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                            <hr />\r\n                            <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={proccesToPayment}>Proceed to Payment</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrders\r\n","import axios from 'axios'\r\nimport {\r\n    NEW_ORDER_REQUEST,\r\n    NEW_ORDER_SUCCESS,\r\n    NEW_ORDER_FAIL,\r\n    CLEAR_ERROR,\r\n    SHOW_ORDER_REQUEST,\r\n    SHOW_ORDER_SUCCESS,\r\n    SHOW_ORDER_FAIL,\r\n    ORDER_DETAIL_FAIL,\r\n    ORDER_DETAIL_REQUEST,\r\n    ORDER_DETAIL_SUCCESS,\r\n    ALL_ORDER_REQUEST,\r\n    ALL_ORDER_SUCCESS,\r\n    ALL_ORDER_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    \r\n} from '../constans/orderContstans'\r\n\r\n\r\nexport const createOrder = (order)=>async(dispatch,getState)=>{\r\n\r\n    try {\r\n        dispatch({type:NEW_ORDER_REQUEST})\r\n\r\n        const config={\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/v1/order/new',order,config)\r\n\r\n    dispatch({\r\n        type:NEW_ORDER_SUCCESS,\r\n        payload:data\r\n    })\r\n        \r\n    } catch (error) {\r\n        dispatch({type:NEW_ORDER_FAIL,\r\n            payload:error.response.data.ErrMessage\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const myOrders = ()=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type:SHOW_ORDER_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/v1/orders/me')\r\n\r\n        dispatch({type:SHOW_ORDER_SUCCESS,\r\n                payload:data.orders\r\n        })\r\n        \r\n    } catch (error) {\r\n        dispatch({type:SHOW_ORDER_FAIL,\r\n        payload:error.response.data.ErrMessage})\r\n    }\r\n}\r\n\r\nexport const orderDetailAction = (id)=>async(dispatch)=>{\r\n\r\n    try {\r\n        dispatch({type:ORDER_DETAIL_REQUEST})\r\n\r\n        const {data}= await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({type:ORDER_DETAIL_SUCCESS,\r\n            payload:data.order\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({type:ORDER_DETAIL_FAIL,\r\n        payload:error.response.data.ErrMessage\r\n        })\r\n        \r\n    }\r\n\r\n}\r\n\r\n//All orders (ADMIN)\r\n\r\nexport const getAllOrders =()=>async(dispatch)=>{\r\n\r\n    try {\r\n\r\n        dispatch({type:ALL_ORDER_REQUEST})\r\n\r\n        const {data}= await axios.get('/api/v1/admin/orders')\r\n\r\n        dispatch({\r\n            type:ALL_ORDER_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type:ALL_ORDER_FAIL,\r\n            payload:error.response.data.ErrMessage\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n//Update order admin\r\nexport const updateOrder=(id,orderData)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type:UPDATE_ORDER_REQUEST})\r\n\r\n        const config ={\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }\r\n\r\n        const {data}= await axios.put(`/api/v1/admin/order/${id}`,orderData,config)\r\n\r\n        dispatch({type:UPDATE_ORDER_SUCCESS,\r\n            payload:data.success\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({type:UPDATE_ORDER_FAIL,\r\n        payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const deleteOrder = (id)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({type:DELETE_ORDER_REQUEST})\r\n\r\n        const {data} = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n    dispatch({type:DELETE_ORDER_SUCCESS,\r\n        payload:data.success\r\n    })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({type:DELETE_ORDER_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n//CLEAR ERROR\r\n\r\nexport const clearError = () => async(dispatch)=>{\r\n\r\n    dispatch({\r\n        type:CLEAR_ERROR\r\n    })\r\n}","import React from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Fragment,useEffect } from 'react'\r\nimport {useAlert} from 'react-alert'\r\nimport {createOrder, clearError} from '../../actions/orderActions'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport CheckoutSteps from './CheckoutSteps'\r\nimport {useStripe, useElements,CardNumberElement,CardExpiryElement,CardCvcElement} from '@stripe/react-stripe-js'\r\n\r\nimport axios from 'axios'\r\n\r\nconst options = {\r\n  style: {\r\n      base: {\r\n          fontSize: '16px'\r\n      },\r\n      invalid: {\r\n          color: '#9e2146'\r\n      }\r\n  }\r\n}\r\n\r\nconst Payment = () => {\r\n\r\n    const history = useHistory();\r\n    const stripe = useStripe();\r\n    const elements = useElements()\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const {user} = useSelector(state=>state.auth)\r\n    const {cartItems,shipingInfo}= useSelector(state=>state.cart)\r\n    const {error} = useSelector(state=>state.newOrder)\r\n\r\n    useEffect(() => {\r\n\r\n      if(error){\r\n        alert.error(error)\r\n        console.log(error)\r\n        dispatch(clearError())\r\n      }\r\n\r\n     \r\n\r\n  }, [alert,dispatch,error])\r\n\r\n\r\n\r\n  const order ={\r\n    orderItems:cartItems,\r\n    shipingInfo\r\n  }\r\n\r\n  const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'))\r\n\r\n  if(orderInfo){\r\n    order.itemsPrice = orderInfo.itemsPrice\r\n    order.shipingPrice = orderInfo.shipingPrice\r\n    order.taxPrice = orderInfo.taxPrice \r\n    order.totalPrice = orderInfo.totalPrice\r\n  }\r\n\r\n  const paymentData ={\r\n    amount:Math.round(orderInfo.totalPrice * 100)\r\n\r\n  }\r\n\r\n\r\n\r\n  const sumbitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    document.querySelector('#pay_btn').disabled = true;\r\n\r\n    let res;\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n        const clientSecret = res.data.client_secret;\r\n\r\n       \r\n\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n\r\n        const result = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardNumberElement),\r\n                billing_details: {\r\n                    name: user.name,\r\n                    email: user.email\r\n                }\r\n            }\r\n        });\r\n\r\n        if (result.error) {\r\n            alert.error(result.error.message);\r\n            document.querySelector('#pay_btn').disabled = false;\r\n        } else {\r\n\r\n            // The payment is processed or not\r\n            if (result.paymentIntent.status === 'succeeded') {\r\n\r\n               order.paymentInfo ={\r\n                 id:result.paymentIntent.id,\r\n                 status:result.paymentIntent.status\r\n               }\r\n               dispatch(createOrder(order))\r\n                history.push('/success')\r\n            } else {\r\n                alert.error('There is some issue while payment processing')\r\n                console.log(error)\r\n            }\r\n        }\r\n       \r\n\r\n    } catch (error) {\r\n        document.querySelector('#pay_btn').disabled = false;\r\n        alert.error(error.response.data.message)\r\n        console.log(error.response)\r\n       \r\n    }\r\n}\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Payment'} />\r\n            <CheckoutSteps shiping confirmOrder payment />\r\n            <div className=\"row wrapper\">\r\n\t\t<div className=\"col-10 col-lg-5\">\r\n            <form className=\"shadow-lg\" onSubmit={sumbitHandler}>\r\n                <h1 className=\"mb-4\">Card Info</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"card_num_field\">Card Number</label>\r\n                  <CardNumberElement\r\n                    type=\"text\"\r\n                    id=\"card_num_field\"\r\n                    className=\"form-control\"\r\n                    options={options}\r\n                    \r\n                  />\r\n                </div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"form-group\">\r\n                  <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                  <CardExpiryElement\r\n                    type=\"text\"\r\n                    id=\"card_exp_field\"\r\n                    className=\"form-control\"\r\n                    options={options}\r\n                 \r\n                  />\r\n                </div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"form-group\">\r\n                  <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                  <CardCvcElement\r\n                    type=\"text\"\r\n                    id=\"card_cvc_field\"\r\n                    className=\"form-control\"\r\n                    options={options}\r\n                   \r\n                  />\r\n                </div>\r\n      \r\n            \r\n                <button\r\n                  id=\"pay_btn\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                >\r\n                  Pay {`- ${orderInfo && orderInfo.totalPrice}`}\r\n                </button>\r\n    \r\n              </form>\r\n\t\t\t  </div>\r\n        </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React from 'react'\r\nimport {  Link } from 'react-router-dom'\r\nimport { Fragment} from 'react'\r\n\r\nimport Metadata from '../layout/Metadata';\r\n\r\n\r\n\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Success Order'} />\r\n            <div className=\"container container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-6 mt-5 text-center\">\r\n                <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                <h2>Vasa narudzbina je uspesno poslata!</h2>\r\n\r\n                <Link to=\"/orders/me\">Go to Orders</Link>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport { Fragment,useEffect } from 'react'\r\nimport Loader from '../layout/Loader'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport {myOrders,clearError} from '../../actions/orderActions';\r\nimport {useAlert} from 'react-alert'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\n\r\nconst ListOfOrders = () => {\r\n\r\nconst alert = useAlert()\r\nconst disptach = useDispatch();\r\nconst {loading,error,orders} = useSelector(state=>state.showOrders)\r\n\r\nuseEffect(() => {\r\n   disptach(myOrders())\r\n\r\n   if(error){\r\n       alert.error(error)\r\n       disptach(clearError())\r\n   }\r\n}, [alert,disptach,error])\r\n\r\nconst setOrders =()=>{\r\n    const data ={\r\n        columns:[\r\n            {\r\n                label:\"Order ID\",\r\n                field:'id',\r\n                sort:'asc'\r\n            },\r\n            {\r\n                label:\"Num of Items\",\r\n                field:'numOfItems',\r\n                sort:'asc'\r\n            },\r\n            {\r\n                label:\"Amount\",\r\n                field:'amount',\r\n                sort:'asc'\r\n            },\r\n            {\r\n                label:\"Status\",\r\n                field:'status',\r\n                sort:'asc'\r\n            },\r\n            {\r\n                label:\"Actions\",\r\n                field:'actions',\r\n                sort:'asc'\r\n            }\r\n        ],\r\n        rows:[]\r\n    }\r\n\r\n    orders.forEach(order=>{\r\n        data.rows.push({\r\n            id:order._id,\r\n            numOfItems:order.orderItems.length,\r\n            amount:`$${order.totalPrice}`,\r\n            status: order.orderStatus && String(order.orderStatus).includes('Delivered') ? <p style={{color: 'green'}}>{order.orderStatus}</p>\r\n                                                                                        : <p style={{color: 'red'}}>{order.orderStatus}</p>,\r\n\r\n        actions: <Link to={`/order/${order._id}`} className='btn btn-primary'>\r\n            <i className='fa fa-eye'></i>\r\n        </Link>\r\n        })\r\n    })\r\n\r\n\r\n    return data;\r\n}\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Metadata title={'My Orders'} />\r\n\r\n            <div className='container-fluid'>\r\n\r\n           \r\n\r\n            <h1 className='my-5'>My Orders</h1>\r\n\r\n            {loading ? <Loader/> : (\r\n                <MDBDataTable \r\n                 data={setOrders()}\r\n                 className='px-3'\r\n                 bordered\r\n                 striped\r\n                 hover\r\n\r\n\r\n                />\r\n\r\n            )}\r\n             </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOfOrders\r\n","import React from 'react'\r\nimport { Link} from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\nimport Loader from '../layout/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { orderDetailAction, clearError } from '../../actions/orderActions';\r\nimport { useAlert } from 'react-alert'\r\n\r\n\r\nconst OrderDetails = ({ match }) => {\r\n    const alert = useAlert()\r\n    const disptach = useDispatch();\r\n    const { loading, error, order={} } = useSelector(state => state.orderDetails)\r\n    const { shipingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        disptach(orderDetailAction(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            disptach(clearError())\r\n        }\r\n    }, [alert, disptach, error, match.params.id])\r\n\r\n    const shipingDetail = shipingInfo && `${shipingInfo.address},${shipingInfo.city},${shipingInfo.postalCode},${shipingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status ==='succeeded'\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Order Details'} />\r\n\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"container container-fluid\">\r\n\t\r\n    <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                    <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shipingInfo && shipingInfo.PhoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b>{shipingDetail}</p>\r\n                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                    <hr />\r\n\r\n                    <h4 className=\"my-4\">Payment</h4>\r\n                    <p className={isPaid ? \"greenColor\" : \"redColor\"} ><b>{isPaid ? \"PLACENO\" : \"NIJE PLACENO\"}</b></p>\r\n\r\n\r\n                    <h4 className=\"my-4\">Order Status:</h4>\r\n                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                    <hr />\r\n                    <div className=\"cart-item my-1\">\r\n\r\n                        {orderItems &&  orderItems.map(item=>(\r\n                                <div key={item.product} className=\"row my-5\">\r\n                                <div className=\"col-4 col-lg-2\">\r\n                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                </div>\r\n\r\n                                <div className=\"col-5 col-lg-5\">\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                    <p>${item.price}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                    <p>{item.quantity} Piece(s)</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))}\r\n                            \r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n    \r\n</div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div>\r\n       \r\n            <div className=\"sidebar-wrapper\">\r\n                <nav id=\"sidebar\">\r\n                    <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n            \r\n                    <li>\r\n                    <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\r\n                            className=\"fa fa-product-hunt\"></i> Products</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n                            <li>\r\n                            <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\r\n                            </li>\r\n            \r\n                            <li>\r\n                            <Link to=\"/admin/product/new\"><i className=\"fa fa-plus\"></i> Create</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n            \r\n                </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n  \r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/Metadata'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, clearError } from '../../actions/productActions';\r\nimport { getAllOrders} from '../../actions/orderActions';\r\nimport {allUser} from '../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n    const dispatch = useDispatch()\r\n    const { products } = useSelector(state => state.products)\r\n    const {orders,totalAmount,error}= useSelector(state=>state.allOrders)\r\n    const {users}= useSelector(state=>state.allUser)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(getAllOrders())\r\n        dispatch(allUser())\r\n    }, [dispatch])\r\n\r\n    let outOfStouk = 0\r\n\r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStouk += 1\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n                    <div className=\"row pr-4\">\r\n                        <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                            <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">${totalAmount && totalAmount.toFixed(2)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row pr-4\">\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\r\n                                </div>\r\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                    <span className=\"float-left\">View Details</span>\r\n                                    <span className=\"float-right\">\r\n                                        <i className=\"fa fa-angle-right\"></i>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\r\n                                </div>\r\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                    <span className=\"float-left\">View Details</span>\r\n                                    <span className=\"float-right\">\r\n                                        <i className=\"fa fa-angle-right\"></i>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\r\n                                </div>\r\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                    <span className=\"float-left\">View Details</span>\r\n                                    <span className=\"float-right\">\r\n                                        <i className=\"fa fa-angle-right\"></i>\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                            <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStouk}</b></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { getAdminProducts, clearError, deleteProduct } from '../../actions/productActions';\r\nimport { useAlert } from 'react-alert'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { DELETE_PRODUCT_RESET } from '../../constans/productsConstans'\r\n\r\nconst ListProducts = ({history}) => {\r\n\r\n    const alert = useAlert()\r\n    const disptach = useDispatch();\r\n    const { loading, error, products } = useSelector(state => state.products)\r\n    const {error:deleteError,isDeleted}=useSelector(state=>state.deleteProduct)\r\n\r\n    useEffect(() => {\r\n        disptach(getAdminProducts())\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            disptach(clearError())\r\n        }\r\n        if (deleteError) {\r\n            alert.error(deleteError)\r\n            disptach(clearError())\r\n        }\r\n\r\n        if(isDeleted){\r\n            alert.success('Uspesno ste obrisali proizvod.')\r\n           history.push('/admin/products')\r\n            disptach({type:DELETE_PRODUCT_RESET})\r\n        }\r\n    }, [alert, disptach, error,isDeleted,history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: \"ID\",\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Name\",\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Price\",\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Stock\",\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Actions\",\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n\r\n\r\n\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className='btn btn-primary py-1 px-2'>\r\n                        <i className='fa fa-pencil'></i>\r\n\r\n                    </Link>\r\n\r\n                    <button className='btn btn-danger py-1 px-2 ml-2'>\r\n                        <i className='fa fa-trash' onClick={()=>deleteHandler(product._id)}></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteHandler =(id)=>{\r\n        disptach(deleteProduct(id))\r\n       \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={\"All products\"} />\r\n            <div className='row'>\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n\r\n                </div>\r\n                <div className='col-12 col-md-10'>\r\n                    <Fragment>\r\n                        <h1 className='my-5'>\r\n                            All products\r\n                        </h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <Fragment>\r\n\r\n                                <MDBDataTable\r\n                                    data={setProducts()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n\r\n\r\n                                />\r\n                            </Fragment>\r\n                        )}\r\n                    </Fragment>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListProducts\r\n","import React from 'react'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { newProduct, clearError } from '../../actions/productActions';\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport { NEW_PRODUCT_RESET } from '../../constans/productsConstans';\r\n\r\nconst NewProduct = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0)\r\n    const [seller, setSeller] = useState('')\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n\r\n\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n    const history = useHistory()\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n    const { loading, error, success } = useSelector(state => state.newProduct)\r\n    useEffect(() => {\r\n\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products')\r\n            alert.success('Uspesno ste dodali product')\r\n            dispatch({ type: NEW_PRODUCT_RESET })\r\n           \r\n        }\r\n    }, [alert, dispatch, error, history, success])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = (e) => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([])\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                } else {\r\n                    console.log('GRESKA')\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={\"New Product\"} />\r\n           \r\n            <div className='row'>\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n\r\n                </div>\r\n                <div className='col-12 col-md-10'>\r\n                    <Fragment>\r\n                            <div className=\"wrapper my-5\">\r\n                                <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                    <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name_field\">Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"name_field\"\r\n                                            className=\"form-control\"\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price_field\">Price</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"price_field\"\r\n                                            className=\"form-control\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"description_field\">Description</label>\r\n                                        <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)} ></textarea>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"category_field\">Category</label>\r\n                                        <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                            {categories.map(categoryy => (\r\n\r\n                                                <option key={categoryy} value={categoryy}>{categoryy}</option>\r\n                                            ))}\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"stock_field\">Stock</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            id=\"stock_field\"\r\n                                            className=\"form-control\"\r\n                                            value={stock}\r\n                                            onChange={(e)=>setStock(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"seller_field\"\r\n                                            className=\"form-control\"\r\n                                            value={seller}\r\n                                            onChange={(e)=>setSeller(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label>Images</label>\r\n\r\n                                        <div className='custom-file'>\r\n                                            <input\r\n                                                type='file'\r\n                                                name='product_images'\r\n                                                className='custom-file-input'\r\n                                                id='customFile'\r\n                                                onChange={onChange}\r\n                                                multiple\r\n                                            />\r\n                                            <label className='custom-file-label' htmlFor='customFile'>\r\n                                                Choose Images\r\n                        </label>\r\n                                        </div>\r\n\r\n                                        {imagesPreview.map(img=>(\r\n\r\n                                            <img src={img} key={img} alt=\"Image Preview\" className='mt-3 mr-2' width=\"55\" height=\"52\"> \r\n                                            </img>\r\n                                        ))}\r\n                                    </div>\r\n\r\n\r\n                                    <button\r\n                                        id=\"login_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-block py-3\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                        CREATE\r\n            </button>\r\n\r\n                                </form>\r\n                            </div>\r\n                       \r\n\r\n\r\n                    </Fragment>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","import React from 'react'\r\nimport {  useHistory } from 'react-router-dom'\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { updateProduct,getProductDetails, clearError } from '../../actions/productActions';\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport Sidebar from './Sidebar'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constans/productsConstans';\r\n\r\nconst UpdateProduct = ({match}) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0)\r\n    const [seller, setSeller] = useState('')\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages,setOldImages]=useState([])\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const history = useHistory()\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading,error,product}=useSelector(state=>state.ProductDetails)\r\n    const {  error:updateError, isUpdated } =useSelector(state=>state.deleteProduct)\r\n\r\n    const productId = match.params.id\r\n\r\n    useEffect(() => {\r\n        if(product && product._id !== productId){\r\n            dispatch(getProductDetails(productId))\r\n        }\r\n        else{\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setDescription(product.description)\r\n            setCategory(product.category)\r\n            setSeller(product.seller)\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError())\r\n        }\r\n        if (updateError) {\r\n            alert.error(updateError)\r\n            dispatch(clearError())\r\n        }\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products')\r\n            alert.success('Uspesno ste izmenili proizvod.')\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n           \r\n        }\r\n    }, [alert, dispatch, error, history, isUpdated,product,productId])\r\n\r\n    const categories = [\r\n\r\n\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id,formData))\r\n    }\r\n\r\n    const onChange = (e) => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([])\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                } else {\r\n                    console.log('GRESKA')\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={\"Update Product\"} />\r\n           \r\n            <div className='row'>\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n\r\n                </div>\r\n                <div className='col-12 col-md-10'>\r\n                    <Fragment>\r\n                            <div className=\"wrapper my-5\">\r\n                                <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                    <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name_field\">Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"name_field\"\r\n                                            className=\"form-control\"\r\n                                            value={name}\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"price_field\">Price</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"price_field\"\r\n                                            className=\"form-control\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"description_field\">Description</label>\r\n                                        <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)} ></textarea>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"category_field\">Category</label>\r\n                                        <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                            {categories.map(categoryy => (\r\n\r\n                                                <option key={categoryy} value={categoryy}>{categoryy}</option>\r\n                                            ))}\r\n\r\n\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"stock_field\">Stock</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            id=\"stock_field\"\r\n                                            className=\"form-control\"\r\n                                            value={stock}\r\n                                            onChange={(e)=>setStock(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"seller_field\"\r\n                                            className=\"form-control\"\r\n                                            value={seller}\r\n                                            onChange={(e)=>setSeller(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label>Images</label>\r\n\r\n                                        <div className='custom-file'>\r\n                                            <input\r\n                                                type='file'\r\n                                                name='product_images'\r\n                                                className='custom-file-input'\r\n                                                id='customFile'\r\n                                                onChange={onChange}\r\n                                                multiple\r\n                                            />\r\n                                            <label className='custom-file-label' htmlFor='customFile'>\r\n                                                Choose Images\r\n                        </label>\r\n                                        </div>\r\n                                        {oldImages && oldImages.map(img=>(\r\n                                                  <img src={img.url} key={img} alt={img.url} className='mt-3 mr-2' width=\"55\" height=\"52\"> \r\n                                                  </img>\r\n                                        ))}\r\n\r\n                                        {imagesPreview.map(img=>(\r\n\r\n                                            <img src={img} key={img} alt=\"Image Preview\" className='mt-3 mr-2' width=\"55\" height=\"52\"> \r\n                                            </img>\r\n                                        ))}\r\n                                    </div>\r\n\r\n\r\n                                    <button\r\n                                        id=\"login_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-block py-3\"\r\n                                        disabled={loading ? true : false}\r\n                                    >\r\n                                       UPDATE\r\n            </button>\r\n\r\n                                </form>\r\n                            </div>\r\n                       \r\n\r\n\r\n                    </Fragment>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { getAllOrders,deleteOrder, clearError} from '../../actions/orderActions';\r\nimport { useAlert } from 'react-alert'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { DELETE_ORDER_RESET } from '../../constans/orderContstans'\r\n\r\nconst OrdersList = ({history}) => {\r\n\r\n    const alert = useAlert()\r\n    const disptach = useDispatch();\r\n    const { loading, error, orders } = useSelector(state => state.allOrders)\r\n    const {isDeleted,error:deleteError}= useSelector(state=>state.updateOrders)\r\n \r\n\r\n    useEffect(() => {\r\n        disptach(getAllOrders())\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            disptach(clearError())\r\n        }\r\n        if (deleteError) {\r\n            alert.error(deleteError)\r\n            disptach(clearError())\r\n        }\r\n        \r\n        if(isDeleted){\r\n            alert.success('Uspesno ste obrisali narudzbinu.')\r\n           history.push('/admin/orders')\r\n            disptach({type:DELETE_ORDER_RESET})\r\n        }\r\n    }, [alert, disptach, error,isDeleted,history,deleteError])\r\n\r\n    const deleteOrderHandler=(id)=>{\r\n        disptach(deleteOrder(id))\r\n    }\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: \"Order ID\",\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Num Of Items\",\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Amount\",\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Status\",\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Actions\",\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered') ? <p style={{color: 'green'}}>{order.orderStatus}</p>\r\n                : <p style={{color: 'red'}}>{order.orderStatus}</p>,\r\n\r\n\r\n\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/${order._id}`} className='btn btn-primary py-1 px-2'>\r\n                        <i className='fa fa-eye'></i>\r\n\r\n                    </Link>\r\n\r\n                    <button className='btn btn-danger py-1 px-2 ml-2' onClick={()=>deleteOrderHandler(order._id)}>\r\n                        <i className='fa fa-trash' ></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={\"All Orders\"} />\r\n            <div className='row'>\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n\r\n                </div>\r\n                <div className='col-12 col-md-10'>\r\n                    <Fragment>\r\n                        <h1 className='my-5'>\r\n                            All ORDERS\r\n                        </h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <Fragment>\r\n\r\n                                <MDBDataTable\r\n                                    data={setOrders()}\r\n                                    className='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n\r\n\r\n                                />\r\n                            </Fragment>\r\n                        )}\r\n                    </Fragment>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList\r\n","import React from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport { Fragment,useEffect,useState } from 'react'\r\nimport Loader from '../layout/Loader'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport {orderDetailAction,updateOrder,clearError} from '../../actions/orderActions';\r\nimport {useAlert} from 'react-alert'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport { UPDATE_ORDER_RESET } from '../../constans/orderContstans'\r\nimport Sidebar from '../admin/Sidebar'\r\n\r\nconst UpdateOrders = ({match}) => {\r\n\r\n    const [status, setStatus] = useState('')\r\n  \r\n\r\n    const history = useHistory()\r\n    const alert = useAlert()\r\n    const dispatch = useDispatch()\r\n\r\n    const {loading,order={}}=useSelector(state=>state.orderDetails)\r\n    const {shipingInfo,orderItems,paymentInfo,user,totalPrice,orderStatus} = order\r\n    const {error,isUpdated} =useSelector(state=>state.updateOrders)\r\n\r\n    const orderId = match.params.id\r\n\r\n    useEffect(() => {\r\n       dispatch(orderDetailAction(orderId))\r\n\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearError())\r\n        }\r\n        \r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/orders')\r\n            alert.success('Uspesno ste izmenili narudzbinu.')\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n           \r\n        }\r\n    }, [alert, dispatch, error, history, isUpdated,orderId])\r\n\r\n\r\n    const updateOrderHandler = (id) => {\r\n        \r\n\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n   \r\n\r\n        dispatch(updateOrder(id,formData))\r\n    }\r\n\r\n    const shipingDetails = shipingInfo && `${shipingInfo.address},${shipingInfo.city},${shipingInfo.postalCode},${shipingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n        <Metadata title={`Procces orders ${order && order._id}`} />\r\n        <div className='row'>\r\n            <div className=\"col-12 col-md-2\">\r\n               <Sidebar />\r\n\r\n            </div>\r\n            <div className='col-12 col-md-10'>\r\n                <Fragment>\r\n                   {loading ? <Loader/> :(\r\n\r\n<div className=\"container container-fluid\">\r\n\t\r\n<div className=\"row d-flex justify-content-around\">\r\n            <div className=\"col-12 col-lg-7 order-details\">\r\n\r\n                <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                <h4 className=\"mb-4\">Shipping Info</h4>\r\n                <p><b>Name:</b> {user && user.name}</p>\r\n                <p><b>Phone:</b> {shipingInfo && shipingInfo.PhoneNo}</p>\r\n                <p className=\"mb-4\"><b>Address:</b>{shipingDetails}</p>\r\n                <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                <hr />\r\n\r\n                \r\n                <h4 className=\"my-4\">Payment</h4>\r\n                    <p className={isPaid ? \"greenColor\" : \"redColor\"} ><b>{isPaid ? \"PLACENO\" : \"NIJE PLACENO\"}</b></p>\r\n\r\n\r\n                    <h4 className=\"my-4\">Order Status:</h4>\r\n                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n                \r\n                <h4 className=\"my-4\">Stripe ID</h4>\r\n                <p className=\"greenColor\" ><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n\r\n\r\n\r\n                <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                <hr />\r\n                <div className=\"cart-item my-1\">\r\n                {orderItems &&  orderItems.map(item=>(\r\n                                <div key={item.product} className=\"row my-5\">\r\n                                <div className=\"col-4 col-lg-2\">\r\n                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                </div>\r\n\r\n                                <div className=\"col-5 col-lg-5\">\r\n                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                    <p>${item.price}</p>\r\n                                </div>\r\n\r\n                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                    <p>{item.quantity} Piece(s)</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        ))}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n            \r\n            <div className=\"col-12 col-lg-3 mt-5\">\r\n                            <h4 className=\"my-4\">Status</h4>\r\n\r\n                            <div className=\"form-group\">\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name='status'\r\n                                    value={status}\r\n                                    onChange={(e)=>setStatus(e.target.value)}\r\n                                >\r\n                                    <option value=\"Processing\">Processing</option>\r\n                                    <option value=\"Shipped\">Shipped</option>\r\n                                    <option value=\"Delivered\">Delivered</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <button className=\"btn btn-primary btn-block\" onClick={()=>updateOrderHandler(order._id)}>\r\n                                Update Status\r\n                        </button>\r\n                        </div>\r\n            \r\n        </div>\r\n\r\n</div>\r\n                   )}\r\n\r\n                  </Fragment>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateOrders\r\n","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { allUser,deleteUsers,clearError} from '../../actions/userActions';\r\nimport { useAlert } from 'react-alert'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { DELETE_USERS_RESET } from '../../constans/userConstans'\r\n\r\nconst UsersList = ({history}) => {\r\n\r\n\r\n    const alert = useAlert()\r\n    const disptach = useDispatch();\r\n    const { loading, error, users } = useSelector(state => state.allUser)\r\n    const {isDeleted}= useSelector(state=>state.user)\r\n \r\n \r\n\r\n    useEffect(() => {\r\n        disptach(allUser())\r\n        \r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            disptach(clearError())\r\n        }\r\n        \r\n        \r\n        if(isDeleted){\r\n        alert.success('Uspesno ste obrisali korisnika.')\r\n           history.push('/admin/users')\r\n            disptach({type:DELETE_USERS_RESET})\r\n        }\r\n    }, [alert, disptach, error,isDeleted,history])\r\n\r\n    const deleteUserHandler=(id)=>{\r\n        disptach(deleteUsers(id))\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: \"UserID\",\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Name\",\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Email\",\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Role\",\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Actions\",\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name:user.name,\r\n                email:user.email,\r\n                role:user.role,\r\n\r\n\r\n                \r\n\r\n\r\n\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className='btn btn-primary py-1 px-2'>\r\n                        <i className='fa fa-pencil'></i>\r\n\r\n                    </Link>\r\n\r\n                    <button className='btn btn-danger py-1 px-2 ml-2' onClick={()=>deleteUserHandler(user._id)} >\r\n                        <i className='fa fa-trash' ></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <Metadata title={\"All Users\"} />\r\n        <div className='row'>\r\n            <div className=\"col-12 col-md-2\">\r\n                <Sidebar />\r\n\r\n            </div>\r\n            <div className='col-12 col-md-10'>\r\n                <Fragment>\r\n                    <h1 className='my-5'>\r\n                        All Users\r\n                    </h1>\r\n\r\n                    {loading ? <Loader /> : (\r\n                        <Fragment>\r\n\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className='px-3'\r\n                                bordered\r\n                                striped\r\n                                hover\r\n\r\n\r\n                            />\r\n                        </Fragment>\r\n                    )}\r\n                </Fragment>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import React from 'react'\r\nimport { Fragment, useEffect, useState } from 'react'\r\nimport Metadata from '../../components/layout/Metadata'\r\n\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport {updateUsers,loadUser,getUserDetails} from '../../actions/userActions'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {UPDATE_USERS_RESET} from '../../constans/userConstans'\r\nimport Sidebar from './Sidebar';\r\n\r\nconst UpdateUser = ({match}) => {\r\n\r\n    const alert = useAlert()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => state.userDetail)\r\n    const {error,isUpdated}= useSelector(state=>state.user)\r\n\r\n    const [name,setName]=useState('')\r\n    const [email,setEmail]=useState('');\r\n    const [role,setRole]=useState('')\r\n    \r\n\r\n const userId = match.params.id\r\n\r\n    useEffect(()=>{\r\n\r\n        if(user && user._id !== userId ){\r\n            dispatch(getUserDetails(userId));\r\n        }else{\r\n\r\n           setName(user.name)\r\n           setEmail(user.email)\r\n           setRole(user.role)\r\n           \r\n        }\r\n\r\n        if(error){\r\n            alert.error(error)\r\n        }\r\n\r\n       \r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n          \r\n\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USERS_RESET\r\n            })\r\n        }\r\n\r\n        \r\n    },[dispatch,error,history,user,userId,alert,isUpdated])\r\n\r\n    const submitHandler=(e)=>{\r\n\r\n        e.preventDefault()\r\n\r\n        const formData = new FormData()\r\n\r\n        formData.set('name',name)\r\n        formData.set('email',email)\r\n        formData.set('role',role)\r\n\r\n        dispatch(updateUsers(user._id,formData))\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <Metadata title={\"Update User\"} />\r\n       \r\n        <div className='row'>\r\n            <div className=\"col-12 col-md-2\">\r\n                <Sidebar />\r\n\r\n            </div>\r\n            <div className='col-12 col-md-10'>\r\n                <Fragment>\r\n                <div className=\"container-container-fluid\">\r\n       <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name_field\">Name</label>\r\n                            <input \r\n\t\t\t\t\t\t\t\ttype=\"name\" \r\n\t\t\t\t\t\t\t\tid=\"name_field\" \r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e)=>setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={(e)=>setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        \r\n    </div>  \r\n\r\n\r\n                </Fragment>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        \r\n\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Fragment, useEffect } from 'react'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Metadata from '../layout/Metadata';\r\nimport { allReviews,deleteReviews, clearError } from '../../actions/productActions';\r\nimport { useAlert } from 'react-alert'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { DELETE_REVIEW_RESET } from '../../constans/productsConstans'\r\nconst DisplayReviews = () => {\r\n    const alert = useAlert()\r\n    const disptach = useDispatch();\r\n\r\n    const [productId, setProductId] = useState('')\r\n    const { loading, error, reviews} = useSelector(state => state.AllReviews)\r\n    const {isDeleted}= useSelector(state=>state.reviewsReducer)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        if (error) {\r\n             alert.error(error)\r\n            disptach(clearError())\r\n           \r\n          \r\n           \r\n        }\r\n\r\n        if (productId !== '') {\r\n            disptach(allReviews(productId))\r\n        }\r\n\r\n\r\n        if(isDeleted){\r\n        alert.success('Uspesno ste obrisali review.')\r\n        \r\n            disptach({type:DELETE_REVIEW_RESET})\r\n        }\r\n    }, [alert, disptach, error, productId,isDeleted])\r\n\r\n    const deleteReviewHandler=(id)=>{\r\n        disptach(deleteReviews(id,productId))\r\n    }\r\n\r\n    const sumbitHandlerReviews = (e) => {\r\n        e.preventDefault()\r\n\r\n        disptach(allReviews(productId))\r\n    }\r\n\r\n    const setReview = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: \"ReviewID\",\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Rating\",\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Comment\",\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"User\",\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: \"Actions\",\r\n                    field: 'actions'\r\n                }\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                actions:\r\n                <Fragment>\r\n\r\n              \r\n                    <button className='btn btn-danger py-1 px-2 ml-2' onClick={()=>deleteReviewHandler(review._id)} >\r\n                        <i className='fa fa-trash' ></i>\r\n                    </button>\r\n                    </Fragment>\r\n\r\n            })\r\n        })\r\n\r\n\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={\"All Reviews\"} />\r\n            <div className='row'>\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n\r\n                </div>\r\n                <div className='col-12 col-md-10'>\r\n                    <Fragment>\r\n                        <div className=\"container container-fluid\">\r\n                            <div className=\"row justify-content-center mt-5\">\r\n                                <div className=\"col-5\">\r\n                                    <form onSubmit={sumbitHandlerReviews}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"email_field\"\r\n                                                className=\"form-control\"\r\n                                                value={productId}\r\n                                                onChange={(e) => setProductId(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <button\r\n                                            id=\"search_button\"\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary btn-block py-2\"\r\n                                        >\r\n                                            SEARCH\r\n\t\t\t\t\t\t\t\t</button>\r\n                                    </ form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        {reviews && reviews.length > 0 ? (\r\n\r\n                            <Fragment>\r\n\r\n                                <MDBDataTable\r\n                                    data={setReview()}\r\n                                    classNameName='px-3'\r\n                                    bordered\r\n                                    striped\r\n                                    hover\r\n\r\n\r\n                                />\r\n                            </Fragment>\r\n\r\n                        ) : (\r\n                            <p className='mt-5 text-center'>No Reviews.</p>\r\n                        )}\r\n\r\n\r\n\r\n                    </Fragment>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DisplayReviews\r\n","import React, {useEffect,useState} from 'react'\r\nimport {Switch} from 'react-router'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport Header from './components/layout/header'\r\nimport Footer from './components/layout/footer'\r\nimport Home from './components/Home'\r\nimport ProductDetails from './components/product/ProductDetails'\r\nimport Login from './components/user/Login'\r\nimport Register from './components/user/Register'\r\nimport {loadUser} from './actions/userActions'\r\nimport store from './store'\r\nimport Profile from './components/user/Profile'\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport UpdateProfile from './components/user/UpdateProfile'\r\nimport UpdatePassword from './components/user/UpdatePassword'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport NewPassword from './components/user/NewPassword'\r\nimport Cart from './components/cart/Cart'\r\nimport Shiping from './components/cart/Shiping'\r\nimport ConfirmOrders from './components/cart/ConfirmOrders'\r\nimport axios from 'axios'\r\nimport Payment from './components/cart/Payment'\r\n\r\n//Payment\r\n\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport {Elements} from '@stripe/react-stripe-js';\r\nimport OrderSuccess from './components/cart/OrderSuccess'\r\nimport ListOfOrders from './components/order/ListOfOrders'\r\nimport OrderDetails from './components/order/OrderDetails'\r\nimport Dashboard from './components/admin/Dashboard'\r\nimport ListProducts from './components/admin/ListProducts'\r\nimport NewProduct from './components/admin/NewProduct'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport UpdateProduct from './components/admin/UpdateProduct'\r\nimport OrdersList from './components/admin/OrdersList'\r\nimport UpdateOrders from './components/order/UpdateOrders'\r\nimport UsersList from './components/admin/UsersList'\r\nimport UpdateUser from './components/admin/UpdateUser'\r\nimport DisplayReviews from './components/admin/DisplayReviews'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    const [stripeApiKey,setStripeApyKey]=useState('')\r\n\r\n    const {loading,user} = useSelector(state=>state.auth)\r\n useEffect(()=>{\r\n    store.dispatch(loadUser()) \r\n\r\n    async function getStipeApyKey (){\r\n        const {data} = await axios.get('/api/v1/stripeapi')\r\n        setStripeApyKey(data.stripeApiKey)\r\n    }\r\n\r\n    getStipeApyKey()\r\n    console.log(stripeApiKey)\r\n   \r\n },[])\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Header />\r\n                <Route exact path='/' component={Home}/>\r\n                <Route  path='/search/:keyword' component={Home}/>\r\n                <Route exact path='/product/:id' component={ProductDetails}/>\r\n\r\n\r\n                <Route path='/cart' component={Cart} exact />\r\n                <ProtectedRoute path='/shiping' exact component={Shiping}/>\r\n                <ProtectedRoute path='/order/confirm' exact component={ConfirmOrders}/>\r\n                <ProtectedRoute path='/success' exact component={OrderSuccess}/>\r\n\r\n                {stripeApiKey &&\r\n            <Elements stripe={loadStripe(stripeApiKey)}>\r\n              <ProtectedRoute path=\"/payment\" component={Payment} />\r\n            </Elements>\r\n          }\r\n                <Route path='/login' component={Login} exact />\r\n                <Route path='/register' component={Register} />\r\n                <Route path='/password/forgot' component={ForgotPassword} exact />\r\n                <Route path='/password/reset/:token' component={NewPassword} exact/>\r\n          \r\n                <ProtectedRoute path='/me' exact component={Profile}/>\r\n                <ProtectedRoute path='/me/update' exact component={UpdateProfile}/>\r\n                <ProtectedRoute path='/password/update'  component={UpdatePassword}/>\r\n\r\n                <ProtectedRoute path='/orders/me'  component={ListOfOrders} exact/>\r\n                <ProtectedRoute path='/order/:id'  component={OrderDetails} exact/>\r\n    \r\n\r\n            <ProtectedRoute path='/dashboard' isAdmin={true}  component={Dashboard} exact/>\r\n            <ProtectedRoute path='/admin/products' isAdmin={true}  component={ListProducts} exact/>\r\n            <Switch>\r\n                <ProtectedRoute path='/admin/product/new' isAdmin={true}  component={NewProduct} exact/>\r\n                <ProtectedRoute path='/admin/product/:id' isAdmin={true}  component={UpdateProduct} exact/>\r\n            </Switch>\r\n         \r\n            <ProtectedRoute path='/admin/orders' isAdmin={true}  component={OrdersList} exact/>\r\n            <ProtectedRoute path='/admin/order/:id' isAdmin={true}  component={UpdateOrders} exact/>\r\n            <ProtectedRoute path='/admin/users/' isAdmin={true}  component={UsersList} exact/>\r\n            <ProtectedRoute path='/admin/user/:id' isAdmin={true}  component={UpdateUser} exact/>\r\n            <ProtectedRoute path='/admin/reviews' isAdmin={true}  component={DisplayReviews} exact/>\r\n\r\n         \r\n                    <Footer />\r\n              \r\n\r\n               \r\n            </Router>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport \"./App.css\"\r\nimport { Provider } from 'react-redux'\r\n\r\nimport store from './store'\r\n\r\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\nconst options = {\r\n  timeout: 3000,\r\n  position: positions.BOTTOM_CENTER,\r\n  transition: transitions.SCALE\r\n}\r\n\r\nReactDOM.render(<Provider store={store} >\r\n     <AlertProvider template={AlertTemplate} {...options}>\r\n      <App />\r\n    </AlertProvider>\r\n\r\n\r\n</Provider>,document.querySelector('#root'))"],"sourceRoot":""}